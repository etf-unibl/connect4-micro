;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 9/5/2017 10:14:51 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x02073E  	LJMP 1854
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x0206E3  	LJMP 1763
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020846  	LJMP 2118
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
_Graphics_SetPixel:
;graphics.c,19 :: 		void Graphics_SetPixel(unsigned char row, unsigned char column, Color color){
;graphics.c,20 :: 		switch(color){
0x002E	0x2104    	AJMP L_Graphics_SetPixel0
;graphics.c,21 :: 		case COLOR_BLACK:
L_Graphics_SetPixel2:
;graphics.c,22 :: 		gMatrixRed[column] = gMatrixRed[column] & ~(1 << row); // clear RED
0x0030	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x0032	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x0034	0xF8      	MOV R0, A
0x0035	0xAA25    	MOV R2, FARG_Graphics_SetPixel_row
0x0037	0x7401    	MOV A, #1
0x0039	0x0A      	INC R2
0x003A	0x8002    	SJMP L__Graphics_SetPixel15
L__Graphics_SetPixel16:
0x003C	0xC3      	CLR C
0x003D	0x33      	RLC A
L__Graphics_SetPixel15:
0x003E	0xDAFC    	DJNZ R2, L__Graphics_SetPixel16
0x0040	0xF9      	MOV R1, A
0x0041	0x6301FF  	XRL R1, #255
0x0044	0xAA01    	MOV R2, R1
0x0046	0xE6      	MOV A, @R0
0x0047	0x5A      	ANL A, R2
0x0048	0xF9      	MOV R1, A
0x0049	0xA601    	MOV @R0, R1
;graphics.c,23 :: 		gMatrixGreen[column] = gMatrixGreen[column] & ~(1 << row); // clear GREEN
0x004B	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x004D	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x004F	0xF8      	MOV R0, A
0x0050	0xAA25    	MOV R2, FARG_Graphics_SetPixel_row
0x0052	0x7401    	MOV A, #1
0x0054	0x0A      	INC R2
0x0055	0x8002    	SJMP L__Graphics_SetPixel17
L__Graphics_SetPixel18:
0x0057	0xC3      	CLR C
0x0058	0x33      	RLC A
L__Graphics_SetPixel17:
0x0059	0xDAFC    	DJNZ R2, L__Graphics_SetPixel18
0x005B	0xF9      	MOV R1, A
0x005C	0x6301FF  	XRL R1, #255
0x005F	0xAA01    	MOV R2, R1
0x0061	0xE6      	MOV A, @R0
0x0062	0x5A      	ANL A, R2
0x0063	0xF9      	MOV R1, A
0x0064	0xA601    	MOV @R0, R1
;graphics.c,24 :: 		break;
0x0066	0x2120    	AJMP L_Graphics_SetPixel1
;graphics.c,25 :: 		case COLOR_RED:
L_Graphics_SetPixel3:
;graphics.c,26 :: 		gMatrixRed[column] = gMatrixRed[column] | (1 << row); // set RED
0x0068	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x006A	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x006C	0xF8      	MOV R0, A
0x006D	0xAA25    	MOV R2, FARG_Graphics_SetPixel_row
0x006F	0x7401    	MOV A, #1
0x0071	0x0A      	INC R2
0x0072	0x8002    	SJMP L__Graphics_SetPixel19
L__Graphics_SetPixel20:
0x0074	0xC3      	CLR C
0x0075	0x33      	RLC A
L__Graphics_SetPixel19:
0x0076	0xDAFC    	DJNZ R2, L__Graphics_SetPixel20
0x0078	0xF9      	MOV R1, A
0x0079	0xAA01    	MOV R2, R1
0x007B	0xE6      	MOV A, @R0
0x007C	0x4A      	ORL A, R2
0x007D	0xF9      	MOV R1, A
0x007E	0xA601    	MOV @R0, R1
;graphics.c,27 :: 		gMatrixGreen[column] = gMatrixGreen[column] & ~(1 << row); // clear GREEN
0x0080	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x0082	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x0084	0xF8      	MOV R0, A
0x0085	0xAA25    	MOV R2, FARG_Graphics_SetPixel_row
0x0087	0x7401    	MOV A, #1
0x0089	0x0A      	INC R2
0x008A	0x8002    	SJMP L__Graphics_SetPixel21
L__Graphics_SetPixel22:
0x008C	0xC3      	CLR C
0x008D	0x33      	RLC A
L__Graphics_SetPixel21:
0x008E	0xDAFC    	DJNZ R2, L__Graphics_SetPixel22
0x0090	0xF9      	MOV R1, A
0x0091	0x6301FF  	XRL R1, #255
0x0094	0xAA01    	MOV R2, R1
0x0096	0xE6      	MOV A, @R0
0x0097	0x5A      	ANL A, R2
0x0098	0xF9      	MOV R1, A
0x0099	0xA601    	MOV @R0, R1
;graphics.c,28 :: 		break;
0x009B	0x2120    	AJMP L_Graphics_SetPixel1
;graphics.c,29 :: 		case COLOR_GREEN:
L_Graphics_SetPixel4:
;graphics.c,30 :: 		gMatrixRed[column] = gMatrixRed[column] & ~(1 << row); // clear RED
0x009D	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x009F	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x00A1	0xF8      	MOV R0, A
0x00A2	0xAA25    	MOV R2, FARG_Graphics_SetPixel_row
0x00A4	0x7401    	MOV A, #1
0x00A6	0x0A      	INC R2
0x00A7	0x8002    	SJMP L__Graphics_SetPixel23
L__Graphics_SetPixel24:
0x00A9	0xC3      	CLR C
0x00AA	0x33      	RLC A
L__Graphics_SetPixel23:
0x00AB	0xDAFC    	DJNZ R2, L__Graphics_SetPixel24
0x00AD	0xF9      	MOV R1, A
0x00AE	0x6301FF  	XRL R1, #255
0x00B1	0xAA01    	MOV R2, R1
0x00B3	0xE6      	MOV A, @R0
0x00B4	0x5A      	ANL A, R2
0x00B5	0xF9      	MOV R1, A
0x00B6	0xA601    	MOV @R0, R1
;graphics.c,31 :: 		gMatrixGreen[column] = gMatrixGreen[column] | (1 << row); // set GREEN
0x00B8	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x00BA	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x00BC	0xF8      	MOV R0, A
0x00BD	0xAA25    	MOV R2, FARG_Graphics_SetPixel_row
0x00BF	0x7401    	MOV A, #1
0x00C1	0x0A      	INC R2
0x00C2	0x8002    	SJMP L__Graphics_SetPixel25
L__Graphics_SetPixel26:
0x00C4	0xC3      	CLR C
0x00C5	0x33      	RLC A
L__Graphics_SetPixel25:
0x00C6	0xDAFC    	DJNZ R2, L__Graphics_SetPixel26
0x00C8	0xF9      	MOV R1, A
0x00C9	0xAA01    	MOV R2, R1
0x00CB	0xE6      	MOV A, @R0
0x00CC	0x4A      	ORL A, R2
0x00CD	0xF9      	MOV R1, A
0x00CE	0xA601    	MOV @R0, R1
;graphics.c,32 :: 		break;
0x00D0	0x804E    	SJMP L_Graphics_SetPixel1
;graphics.c,33 :: 		case COLOR_YELLOW:
L_Graphics_SetPixel5:
;graphics.c,34 :: 		gMatrixRed[column] = gMatrixRed[column] | (1 << column); // set RED
0x00D2	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x00D4	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x00D6	0xF8      	MOV R0, A
0x00D7	0xAA26    	MOV R2, FARG_Graphics_SetPixel_column
0x00D9	0x7401    	MOV A, #1
0x00DB	0x0A      	INC R2
0x00DC	0x8002    	SJMP L__Graphics_SetPixel27
L__Graphics_SetPixel28:
0x00DE	0xC3      	CLR C
0x00DF	0x33      	RLC A
L__Graphics_SetPixel27:
0x00E0	0xDAFC    	DJNZ R2, L__Graphics_SetPixel28
0x00E2	0xF9      	MOV R1, A
0x00E3	0xAA01    	MOV R2, R1
0x00E5	0xE6      	MOV A, @R0
0x00E6	0x4A      	ORL A, R2
0x00E7	0xF9      	MOV R1, A
0x00E8	0xA601    	MOV @R0, R1
;graphics.c,35 :: 		gMatrixGreen[column] = gMatrixGreen[column] | (1 << column); // set GREEN
0x00EA	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x00EC	0x2526    	ADD A, FARG_Graphics_SetPixel_column
0x00EE	0xF8      	MOV R0, A
0x00EF	0xAA26    	MOV R2, FARG_Graphics_SetPixel_column
0x00F1	0x7401    	MOV A, #1
0x00F3	0x0A      	INC R2
0x00F4	0x8002    	SJMP L__Graphics_SetPixel29
L__Graphics_SetPixel30:
0x00F6	0xC3      	CLR C
0x00F7	0x33      	RLC A
L__Graphics_SetPixel29:
0x00F8	0xDAFC    	DJNZ R2, L__Graphics_SetPixel30
0x00FA	0xF9      	MOV R1, A
0x00FB	0xAA01    	MOV R2, R1
0x00FD	0xE6      	MOV A, @R0
0x00FE	0x4A      	ORL A, R2
0x00FF	0xF9      	MOV R1, A
0x0100	0xA601    	MOV @R0, R1
;graphics.c,36 :: 		break;
0x0102	0x801C    	SJMP L_Graphics_SetPixel1
;graphics.c,37 :: 		}
L_Graphics_SetPixel0:
0x0104	0xE527    	MOV A, FARG_Graphics_SetPixel_color
0x0106	0x7002    	JNZ #2
0x0108	0x0130    	AJMP L_Graphics_SetPixel2
0x010A	0xE527    	MOV A, FARG_Graphics_SetPixel_color
0x010C	0x6401    	XRL A, #1
0x010E	0x7002    	JNZ #2
0x0110	0x0168    	AJMP L_Graphics_SetPixel3
0x0112	0xE527    	MOV A, FARG_Graphics_SetPixel_color
0x0114	0x6402    	XRL A, #2
0x0116	0x7002    	JNZ #2
0x0118	0x019D    	AJMP L_Graphics_SetPixel4
0x011A	0xE527    	MOV A, FARG_Graphics_SetPixel_color
0x011C	0x6403    	XRL A, #3
0x011E	0x60B2    	JZ L_Graphics_SetPixel5
L_Graphics_SetPixel1:
;graphics.c,38 :: 		}
0x0120	0x22      	RET
; end of _Graphics_SetPixel
_Graphics_HorizontalLine:
;graphics.c,61 :: 		unsigned char columnEnd, Color color){
;graphics.c,63 :: 		for(column = columnStart; column <= columnEnd; column++){
0x0121	0x852124  	MOV Graphics_HorizontalLine_column_L0, FARG_Graphics_HorizontalLine_columnStart+0
L_Graphics_HorizontalLine9:
0x0124	0xD3      	SETB C
0x0125	0xE524    	MOV A, Graphics_HorizontalLine_column_L0
0x0127	0x9522    	SUBB A, FARG_Graphics_HorizontalLine_columnEnd
0x0129	0x500F    	JNC L_Graphics_HorizontalLine10
;graphics.c,64 :: 		Graphics_SetPixel(row, column, color);
0x012B	0x852025  	MOV FARG_Graphics_SetPixel_row, FARG_Graphics_HorizontalLine_row+0
0x012E	0x852426  	MOV FARG_Graphics_SetPixel_column, Graphics_HorizontalLine_column_L0+0
0x0131	0x852327  	MOV FARG_Graphics_SetPixel_color, FARG_Graphics_HorizontalLine_color+0
0x0134	0x112E    	ACALL _Graphics_SetPixel
;graphics.c,63 :: 		for(column = columnStart; column <= columnEnd; column++){
0x0136	0x0524    	INC Graphics_HorizontalLine_column_L0
;graphics.c,65 :: 		}
0x0138	0x80EA    	SJMP L_Graphics_HorizontalLine9
L_Graphics_HorizontalLine10:
;graphics.c,66 :: 		}
0x013A	0x22      	RET
; end of _Graphics_HorizontalLine
_Delay_1us:
;__Lib_Delays.c,63 :: 		void Delay_1us() {
;__Lib_Delays.c,64 :: 		Delay_us(1);
0x013B	0x00      	NOP
;__Lib_Delays.c,65 :: 		}
0x013C	0x22      	RET
; end of _Delay_1us
_Keypad_Key_Press:
;__Lib_Keypad4x4.c,46 :: 		
;__Lib_Keypad4x4.c,51 :: 		
0x013D	0x751B00  	MOV Keypad_Key_Press_rslt_L0, #0
;__Lib_Keypad4x4.c,52 :: 		
0x0140	0x751D00  	MOV Keypad_Key_Press_loc_L0, #0
;__Lib_Keypad4x4.c,53 :: 		
0x0143	0x751E00  	MOV Keypad_Key_Press_rowcnt_L0, #0
;__Lib_Keypad4x4.c,54 :: 		
0x0146	0x751F10  	MOV Keypad_Key_Press_shifter_L0, #16
;__Lib_Keypad4x4.c,55 :: 		
L_Keypad_Key_Press0:
0x0149	0xC3      	CLR C
0x014A	0xE51E    	MOV A, Keypad_Key_Press_rowcnt_L0
0x014C	0x9404    	SUBB A, #4
0x014E	0x5050    	JNC L_Keypad_Key_Press1
;__Lib_Keypad4x4.c,56 :: 		
0x0150	0x7580F0  	MOV keypadPort, #240
;__Lib_Keypad4x4.c,57 :: 		
0x0153	0xE51F    	MOV A, Keypad_Key_Press_shifter_L0
0x0155	0x64FF    	XRL A, #255
0x0157	0xF580    	MOV keypadPort, A
;__Lib_Keypad4x4.c,58 :: 		
0x0159	0x313B    	ACALL _Delay_1us
;__Lib_Keypad4x4.c,59 :: 		
0x015B	0x313B    	ACALL _Delay_1us
;__Lib_Keypad4x4.c,60 :: 		
0x015D	0xE580    	MOV A, keypadPort
0x015F	0x44F0    	ORL A, #240
0x0161	0xF8      	MOV R0, A
0x0162	0x85001C  	MOV Keypad_Key_Press_kdata_L0, 0
;__Lib_Keypad4x4.c,61 :: 		
0x0165	0x6300FF  	XRL R0, #255
0x0168	0x85001C  	MOV Keypad_Key_Press_kdata_L0, 0
;__Lib_Keypad4x4.c,62 :: 		
0x016B	0xE8      	MOV A, R0
0x016C	0x601B    	JZ L_Keypad_Key_Press2
;__Lib_Keypad4x4.c,64 :: 		
0x016E	0x851D1B  	MOV Keypad_Key_Press_rslt_L0, Keypad_Key_Press_loc_L0+0
;__Lib_Keypad4x4.c,65 :: 		
L_Keypad_Key_Press3:
0x0171	0xE51C    	MOV A, Keypad_Key_Press_kdata_L0
0x0173	0x6011    	JZ L_Keypad_Key_Press4
;__Lib_Keypad4x4.c,66 :: 		
0x0175	0x7801    	MOV R0, #1
0x0177	0xE51C    	MOV A, Keypad_Key_Press_kdata_L0
0x0179	0x08      	INC R0
0x017A	0x8002    	SJMP L__Keypad_Key_Press7
L__Keypad_Key_Press8:
0x017C	0xC3      	CLR C
0x017D	0x13      	RRC A
L__Keypad_Key_Press7:
0x017E	0xD8FC    	DJNZ R0, L__Keypad_Key_Press8
0x0180	0xF51C    	MOV Keypad_Key_Press_kdata_L0, A
;__Lib_Keypad4x4.c,67 :: 		
0x0182	0x051B    	INC Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,68 :: 		
0x0184	0x80EB    	SJMP L_Keypad_Key_Press3
L_Keypad_Key_Press4:
;__Lib_Keypad4x4.c,70 :: 		
0x0186	0x751E04  	MOV Keypad_Key_Press_rowcnt_L0, #4
;__Lib_Keypad4x4.c,71 :: 		
L_Keypad_Key_Press2:
;__Lib_Keypad4x4.c,72 :: 		
0x0189	0x7801    	MOV R0, #1
0x018B	0xE51F    	MOV A, Keypad_Key_Press_shifter_L0
0x018D	0x08      	INC R0
0x018E	0x8002    	SJMP L__Keypad_Key_Press9
L__Keypad_Key_Press10:
0x0190	0xC3      	CLR C
0x0191	0x33      	RLC A
L__Keypad_Key_Press9:
0x0192	0xD8FC    	DJNZ R0, L__Keypad_Key_Press10
0x0194	0xF51F    	MOV Keypad_Key_Press_shifter_L0, A
;__Lib_Keypad4x4.c,73 :: 		
0x0196	0xE51D    	MOV A, Keypad_Key_Press_loc_L0
0x0198	0x2404    	ADD A, #4
0x019A	0xF51D    	MOV Keypad_Key_Press_loc_L0, A
;__Lib_Keypad4x4.c,74 :: 		
0x019C	0x051E    	INC Keypad_Key_Press_rowcnt_L0
;__Lib_Keypad4x4.c,75 :: 		
0x019E	0x80A9    	SJMP L_Keypad_Key_Press0
L_Keypad_Key_Press1:
;__Lib_Keypad4x4.c,77 :: 		
0x01A0	0xA81B    	MOV R0, Keypad_Key_Press_rslt_L0
;__Lib_Keypad4x4.c,78 :: 		
0x01A2	0x22      	RET
; end of _Keypad_Key_Press
_Timer_Init:
;timer.c,17 :: 		void Timer_Init(){
;timer.c,18 :: 		mMiliseconds = 0;
0x01A3	0x750B00  	MOV timer_mMiliseconds, #0
0x01A6	0x750C00  	MOV timer_mMiliseconds+1, #0
0x01A9	0x750D00  	MOV timer_mMiliseconds+2, #0
0x01AC	0x750E00  	MOV timer_mMiliseconds+3, #0
;timer.c,20 :: 		TMOD |= 0x10;
0x01AF	0x438910  	ORL TMOD, #16
;timer.c,22 :: 		TH1 = 0xFC;
0x01B2	0x758DFC  	MOV TH1, #252
;timer.c,23 :: 		TL1 = 0xBE;
0x01B5	0x758BBE  	MOV TL1, #190
;timer.c,25 :: 		IE |= 0x88;
0x01B8	0x43A888  	ORL IE, #136
;timer.c,27 :: 		TR1_bit = 1;
0x01BB	0xD28E    	SETB TR1_bit
;timer.c,28 :: 		}
0x01BD	0x22      	RET
; end of _Timer_Init
_Keypad_Init:
;__Lib_Keypad4x4.c,40 :: 		
;__Lib_Keypad4x4.c,41 :: 		
0x01BE	0x7580FF  	MOV keypadPort, #255
;__Lib_Keypad4x4.c,42 :: 		
0x01C1	0x22      	RET
; end of _Keypad_Init
_ConnectFour_Init:
;connectfour.c,29 :: 		void ConnectFour_Init(){
;connectfour.c,31 :: 		mCurrentPlayerColor = COLOR_RED;
0x01C2	0x750801  	MOV connectfour_mCurrentPlayerColor, #1
;connectfour.c,32 :: 		Graphics_HorizontalLine(7, 0, 7, COLOR_RED);
0x01C5	0x752007  	MOV FARG_Graphics_HorizontalLine_row, #7
0x01C8	0x752100  	MOV FARG_Graphics_HorizontalLine_columnStart, #0
0x01CB	0x752207  	MOV FARG_Graphics_HorizontalLine_columnEnd, #7
0x01CE	0x752301  	MOV FARG_Graphics_HorizontalLine_color, #1
0x01D1	0x3121    	ACALL _Graphics_HorizontalLine
;connectfour.c,33 :: 		}
0x01D3	0x22      	RET
; end of _ConnectFour_Init
_Display_Init:
;display.c,24 :: 		void Display_Init(){
;display.c,26 :: 		mRowOutputPort = 0x00;
0x01D4	0x759000  	MOV P1, #0
;display.c,27 :: 		mRedOutputPort = 0x00;
0x01D7	0x75A000  	MOV P2, #0
;display.c,28 :: 		mGreenOutputPort = 0x00;
0x01DA	0x75B000  	MOV P3, #0
;display.c,30 :: 		TMOD |= 0x01;
0x01DD	0x438901  	ORL TMOD, #1
;display.c,32 :: 		TH0 = 0xF9;
0x01E0	0x758CF9  	MOV TH0, #249
;display.c,33 :: 		TL0 = 0x7D;
0x01E3	0x758A7D  	MOV TL0, #125
;display.c,35 :: 		IE |= 0x82;
0x01E6	0x43A882  	ORL IE, #130
;display.c,37 :: 		TR0_bit = 1;
0x01E9	0xD28C    	SETB TR0_bit
;display.c,38 :: 		}
0x01EB	0x22      	RET
; end of _Display_Init
_Delay_10us:
;__Lib_Delays.c,88 :: 		void Delay_10us() {
;__Lib_Delays.c,89 :: 		Delay_us(10);
0x01EC	0x7F03    	MOV R7, 3
0x01EE	0xDFFE    	DJNZ R7, PC-2
0x01F0	0x00      	NOP
;__Lib_Delays.c,90 :: 		}
0x01F1	0x22      	RET
; end of _Delay_10us
_Graphics_ClearDisplay:
;graphics.c,73 :: 		void Graphics_ClearDisplay(){
;graphics.c,75 :: 		for(i = 0; i < 8; i++){
0x01F2	0x751B00  	MOV Graphics_ClearDisplay_i_L0, #0
L_Graphics_ClearDisplay12:
0x01F5	0xC3      	CLR C
0x01F6	0xE51B    	MOV A, Graphics_ClearDisplay_i_L0
0x01F8	0x9408    	SUBB A, #8
0x01FA	0x5012    	JNC L_Graphics_ClearDisplay13
;graphics.c,76 :: 		gMatrixRed[i] = 0x00;
0x01FC	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x01FE	0x251B    	ADD A, Graphics_ClearDisplay_i_L0
0x0200	0xF8      	MOV R0, A
0x0201	0x7600    	MOV @R0, #0
;graphics.c,77 :: 		gMatrixGreen[i] = 0x00;
0x0203	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x0205	0x251B    	ADD A, Graphics_ClearDisplay_i_L0
0x0207	0xF8      	MOV R0, A
0x0208	0x7600    	MOV @R0, #0
;graphics.c,75 :: 		for(i = 0; i < 8; i++){
0x020A	0x051B    	INC Graphics_ClearDisplay_i_L0
;graphics.c,78 :: 		}
0x020C	0x80E7    	SJMP L_Graphics_ClearDisplay12
L_Graphics_ClearDisplay13:
;graphics.c,79 :: 		}
0x020E	0x22      	RET
; end of _Graphics_ClearDisplay
_ConnectFour_SwitchPlayer:
;connectfour.c,40 :: 		void ConnectFour_SwitchPlayer(){
;connectfour.c,41 :: 		if(mCurrentPlayerColor == COLOR_RED){
0x020F	0xE508    	MOV A, connectfour_mCurrentPlayerColor
0x0211	0x6401    	XRL A, #1
0x0213	0x7013    	JNZ L_ConnectFour_SwitchPlayer0
;connectfour.c,42 :: 		mCurrentPlayerColor = COLOR_GREEN;
0x0215	0x750802  	MOV connectfour_mCurrentPlayerColor, #2
;connectfour.c,43 :: 		Graphics_HorizontalLine(7, 0, 7, COLOR_GREEN);
0x0218	0x752007  	MOV FARG_Graphics_HorizontalLine_row, #7
0x021B	0x752100  	MOV FARG_Graphics_HorizontalLine_columnStart, #0
0x021E	0x752207  	MOV FARG_Graphics_HorizontalLine_columnEnd, #7
0x0221	0x752302  	MOV FARG_Graphics_HorizontalLine_color, #2
0x0224	0x3121    	ACALL _Graphics_HorizontalLine
;connectfour.c,44 :: 		}else if(mCurrentPlayerColor == COLOR_GREEN){
0x0226	0x8017    	SJMP L_ConnectFour_SwitchPlayer1
L_ConnectFour_SwitchPlayer0:
0x0228	0xE508    	MOV A, connectfour_mCurrentPlayerColor
0x022A	0x6402    	XRL A, #2
0x022C	0x7011    	JNZ L_ConnectFour_SwitchPlayer2
;connectfour.c,45 :: 		mCurrentPlayerColor = COLOR_RED;
0x022E	0x750801  	MOV connectfour_mCurrentPlayerColor, #1
;connectfour.c,46 :: 		Graphics_HorizontalLine(7, 0, 7, COLOR_RED);
0x0231	0x752007  	MOV FARG_Graphics_HorizontalLine_row, #7
0x0234	0x752100  	MOV FARG_Graphics_HorizontalLine_columnStart, #0
0x0237	0x752207  	MOV FARG_Graphics_HorizontalLine_columnEnd, #7
0x023A	0x752301  	MOV FARG_Graphics_HorizontalLine_color, #1
0x023D	0x3121    	ACALL _Graphics_HorizontalLine
;connectfour.c,47 :: 		}
L_ConnectFour_SwitchPlayer2:
L_ConnectFour_SwitchPlayer1:
;connectfour.c,48 :: 		}
0x023F	0x22      	RET
; end of _ConnectFour_SwitchPlayer
_ConnectFour_TurnWinnersDiscs:
;connectfour.c,191 :: 		void ConnectFour_TurnWinnersDiscs(unsigned char onOff){
;connectfour.c,194 :: 		if(onOff){
0x0240	0xE518    	MOV A, FARG_ConnectFour_TurnWinnersDiscs_onOff
0x0242	0x602D    	JZ L_ConnectFour_TurnWinnersDiscs62
;connectfour.c,195 :: 		for(i = 0; i < 4; i++){
0x0244	0x751900  	MOV ConnectFour_TurnWinnersDiscs_i_L0, #0
L_ConnectFour_TurnWinnersDiscs63:
0x0247	0xC3      	CLR C
0x0248	0xE519    	MOV A, ConnectFour_TurnWinnersDiscs_i_L0
0x024A	0x9404    	SUBB A, #4
0x024C	0x5021    	JNC L_ConnectFour_TurnWinnersDiscs64
;connectfour.c,196 :: 		Graphics_SetPixel(mWinnersDiscsPosition[i][0], mWinnersDiscsPosition[i][1] + 1,
0x024E	0x7901    	MOV R1, #1
0x0250	0xE519    	MOV A, ConnectFour_TurnWinnersDiscs_i_L0
0x0252	0x09      	INC R1
0x0253	0x8002    	SJMP L__ConnectFour_TurnWinnersDiscs114
L__ConnectFour_TurnWinnersDiscs115:
0x0255	0xC3      	CLR C
0x0256	0x33      	RLC A
L__ConnectFour_TurnWinnersDiscs114:
0x0257	0xD9FC    	DJNZ R1, L__ConnectFour_TurnWinnersDiscs115
0x0259	0xF8      	MOV R0, A
0x025A	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x025C	0x28      	ADD A, R0
0x025D	0xF8      	MOV R0, A
0x025E	0x8625    	MOV FARG_Graphics_SetPixel_row, @R0
0x0260	0x08      	INC R0
0x0261	0xE6      	MOV A, @R0
0x0262	0x2401    	ADD A, #1
0x0264	0xF526    	MOV FARG_Graphics_SetPixel_column, A
;connectfour.c,197 :: 		mCurrentPlayerColor);
0x0266	0x850827  	MOV FARG_Graphics_SetPixel_color, connectfour_mCurrentPlayerColor+0
0x0269	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,195 :: 		for(i = 0; i < 4; i++){
0x026B	0x0519    	INC ConnectFour_TurnWinnersDiscs_i_L0
;connectfour.c,198 :: 		}
0x026D	0x80D8    	SJMP L_ConnectFour_TurnWinnersDiscs63
L_ConnectFour_TurnWinnersDiscs64:
;connectfour.c,199 :: 		}
0x026F	0x802B    	SJMP L_ConnectFour_TurnWinnersDiscs66
L_ConnectFour_TurnWinnersDiscs62:
;connectfour.c,202 :: 		for(i = 0; i < 4; i++){
0x0271	0x751900  	MOV ConnectFour_TurnWinnersDiscs_i_L0, #0
L_ConnectFour_TurnWinnersDiscs67:
0x0274	0xC3      	CLR C
0x0275	0xE519    	MOV A, ConnectFour_TurnWinnersDiscs_i_L0
0x0277	0x9404    	SUBB A, #4
0x0279	0x5021    	JNC L_ConnectFour_TurnWinnersDiscs68
;connectfour.c,203 :: 		Graphics_SetPixel(mWinnersDiscsPosition[i][0], mWinnersDiscsPosition[i][1] + 1,
0x027B	0x7901    	MOV R1, #1
0x027D	0xE519    	MOV A, ConnectFour_TurnWinnersDiscs_i_L0
0x027F	0x09      	INC R1
0x0280	0x8002    	SJMP L__ConnectFour_TurnWinnersDiscs116
L__ConnectFour_TurnWinnersDiscs117:
0x0282	0xC3      	CLR C
0x0283	0x33      	RLC A
L__ConnectFour_TurnWinnersDiscs116:
0x0284	0xD9FC    	DJNZ R1, L__ConnectFour_TurnWinnersDiscs117
0x0286	0xF8      	MOV R0, A
0x0287	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0289	0x28      	ADD A, R0
0x028A	0xF8      	MOV R0, A
0x028B	0x8625    	MOV FARG_Graphics_SetPixel_row, @R0
0x028D	0x08      	INC R0
0x028E	0xE6      	MOV A, @R0
0x028F	0x2401    	ADD A, #1
0x0291	0xF526    	MOV FARG_Graphics_SetPixel_column, A
;connectfour.c,204 :: 		COLOR_BLACK);
0x0293	0x752700  	MOV FARG_Graphics_SetPixel_color, #0
0x0296	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,202 :: 		for(i = 0; i < 4; i++){
0x0298	0x0519    	INC ConnectFour_TurnWinnersDiscs_i_L0
;connectfour.c,205 :: 		}
0x029A	0x80D8    	SJMP L_ConnectFour_TurnWinnersDiscs67
L_ConnectFour_TurnWinnersDiscs68:
;connectfour.c,206 :: 		}
L_ConnectFour_TurnWinnersDiscs66:
;connectfour.c,207 :: 		}
0x029C	0x22      	RET
; end of _ConnectFour_TurnWinnersDiscs
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x029D	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x029E	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x029F	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x02A0	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x02A1	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x02A2	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x02A4	0x22      	RET
; end of ___CC2D
_Display_SetOutput:
;display.c,45 :: 		void Display_SetOutput(unsigned char row, unsigned char red, unsigned char green){
;display.c,47 :: 		mRowOutputPort = 0x00;
0x02A5	0x759000  	MOV P1, #0
;display.c,48 :: 		mRedOutputPort = 0x00;
0x02A8	0x75A000  	MOV P2, #0
;display.c,49 :: 		mGreenOutputPort = 0x00;
0x02AB	0x75B000  	MOV P3, #0
;display.c,51 :: 		mRedOutputPort = red;
0x02AE	0x8529A0  	MOV P2, FARG_Display_SetOutput_red+0
;display.c,52 :: 		mGreenOutputPort = green;
0x02B1	0x852AB0  	MOV P3, FARG_Display_SetOutput_green+0
;display.c,54 :: 		mRowOutputPort = row;
0x02B4	0x852890  	MOV P1, FARG_Display_SetOutput_row+0
;display.c,55 :: 		}
0x02B7	0x22      	RET
; end of _Display_SetOutput
_Init:
;main.c,11 :: 		void Init(){
;main.c,12 :: 		Timer_Init();
0x02B8	0x31A3    	ACALL _Timer_Init
;main.c,13 :: 		Keypad_Init();
0x02BA	0x31BE    	ACALL _Keypad_Init
;main.c,14 :: 		Display_Init();
0x02BC	0x31D4    	ACALL _Display_Init
;main.c,15 :: 		ConnectFour_Init();
0x02BE	0x31C2    	ACALL _ConnectFour_Init
;main.c,16 :: 		}
0x02C0	0x22      	RET
; end of _Init
_Keypad_Key_Click:
;__Lib_Keypad4x4.c,81 :: 		
;__Lib_Keypad4x4.c,85 :: 		
0x02C1	0x313D    	ACALL _Keypad_Key_Press
0x02C3	0x850018  	MOV Keypad_Key_Click_rslt_L0, 0
;__Lib_Keypad4x4.c,87 :: 		
L_Keypad_Key_Click5:
0x02C6	0xE580    	MOV A, keypadPort
0x02C8	0x540F    	ANL A, #15
0x02CA	0xF9      	MOV R1, A
0x02CB	0x640F    	XRL A, #15
0x02CD	0x6004    	JZ L_Keypad_Key_Click6
;__Lib_Keypad4x4.c,88 :: 		
0x02CF	0x31EC    	ACALL _Delay_10us
0x02D1	0x80F3    	SJMP L_Keypad_Key_Click5
L_Keypad_Key_Click6:
;__Lib_Keypad4x4.c,90 :: 		
0x02D3	0xA818    	MOV R0, Keypad_Key_Click_rslt_L0
;__Lib_Keypad4x4.c,91 :: 		
0x02D5	0x22      	RET
; end of _Keypad_Key_Click
_ConnectFour_NewGame:
;connectfour.c,214 :: 		void ConnectFour_NewGame(){
;connectfour.c,218 :: 		for(i = 0; i < 6; i++){
0x02D6	0x751800  	MOV ConnectFour_NewGame_i_L0, #0
L_ConnectFour_NewGame70:
0x02D9	0xC3      	CLR C
0x02DA	0xE518    	MOV A, ConnectFour_NewGame_i_L0
0x02DC	0x9406    	SUBB A, #6
0x02DE	0x5022    	JNC L_ConnectFour_NewGame71
;connectfour.c,219 :: 		for(j = 0; j < 7; j++){
0x02E0	0x751900  	MOV ConnectFour_NewGame_j_L0, #0
L_ConnectFour_NewGame73:
0x02E3	0xC3      	CLR C
0x02E4	0xE519    	MOV A, ConnectFour_NewGame_j_L0
0x02E6	0x9407    	SUBB A, #7
0x02E8	0x5014    	JNC L_ConnectFour_NewGame74
;connectfour.c,220 :: 		mGameMatrix[i][j] = 0;
0x02EA	0x8518F0  	MOV B, ConnectFour_NewGame_i_L0+0
0x02ED	0x7407    	MOV A, #7
0x02EF	0xA4      	MUL AB
0x02F0	0xF8      	MOV R0, A
0x02F1	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x02F3	0x28      	ADD A, R0
0x02F4	0xF8      	MOV R0, A
0x02F5	0x2519    	ADD A, ConnectFour_NewGame_j_L0
0x02F7	0xF8      	MOV R0, A
0x02F8	0x7600    	MOV @R0, #0
;connectfour.c,219 :: 		for(j = 0; j < 7; j++){
0x02FA	0x0519    	INC ConnectFour_NewGame_j_L0
;connectfour.c,221 :: 		}
0x02FC	0x80E5    	SJMP L_ConnectFour_NewGame73
L_ConnectFour_NewGame74:
;connectfour.c,218 :: 		for(i = 0; i < 6; i++){
0x02FE	0x0518    	INC ConnectFour_NewGame_i_L0
;connectfour.c,222 :: 		}
0x0300	0x80D7    	SJMP L_ConnectFour_NewGame70
L_ConnectFour_NewGame71:
;connectfour.c,224 :: 		for(i = 0; i < 4; i++){
0x0302	0x751800  	MOV ConnectFour_NewGame_i_L0, #0
L_ConnectFour_NewGame76:
0x0305	0xC3      	CLR C
0x0306	0xE518    	MOV A, ConnectFour_NewGame_i_L0
0x0308	0x9404    	SUBB A, #4
0x030A	0x5027    	JNC L_ConnectFour_NewGame77
;connectfour.c,225 :: 		for(j = 0; j < 2; j++){
0x030C	0x751900  	MOV ConnectFour_NewGame_j_L0, #0
L_ConnectFour_NewGame79:
0x030F	0xC3      	CLR C
0x0310	0xE519    	MOV A, ConnectFour_NewGame_j_L0
0x0312	0x9402    	SUBB A, #2
0x0314	0x5019    	JNC L_ConnectFour_NewGame80
;connectfour.c,226 :: 		mWinnersDiscsPosition[i][j] = 0;
0x0316	0x7901    	MOV R1, #1
0x0318	0xE518    	MOV A, ConnectFour_NewGame_i_L0
0x031A	0x09      	INC R1
0x031B	0x8002    	SJMP L__ConnectFour_NewGame118
L__ConnectFour_NewGame119:
0x031D	0xC3      	CLR C
0x031E	0x33      	RLC A
L__ConnectFour_NewGame118:
0x031F	0xD9FC    	DJNZ R1, L__ConnectFour_NewGame119
0x0321	0xF8      	MOV R0, A
0x0322	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0324	0x28      	ADD A, R0
0x0325	0xF8      	MOV R0, A
0x0326	0x2519    	ADD A, ConnectFour_NewGame_j_L0
0x0328	0xF8      	MOV R0, A
0x0329	0x7600    	MOV @R0, #0
;connectfour.c,225 :: 		for(j = 0; j < 2; j++){
0x032B	0x0519    	INC ConnectFour_NewGame_j_L0
;connectfour.c,227 :: 		}
0x032D	0x80E0    	SJMP L_ConnectFour_NewGame79
L_ConnectFour_NewGame80:
;connectfour.c,224 :: 		for(i = 0; i < 4; i++){
0x032F	0x0518    	INC ConnectFour_NewGame_i_L0
;connectfour.c,228 :: 		}
0x0331	0x80D2    	SJMP L_ConnectFour_NewGame76
L_ConnectFour_NewGame77:
;connectfour.c,230 :: 		Graphics_ClearDisplay();
0x0333	0x31F2    	ACALL _Graphics_ClearDisplay
;connectfour.c,232 :: 		ConnectFour_Init();
0x0335	0x31C2    	ACALL _ConnectFour_Init
;connectfour.c,233 :: 		}
0x0337	0x22      	RET
; end of _ConnectFour_NewGame
_ConnectFour_InsertDisc:
;connectfour.c,56 :: 		unsigned char ConnectFour_InsertDisc(unsigned char column){
;connectfour.c,60 :: 		for(i = 5; i >= 0; i--){
0x0338	0x751905  	MOV ConnectFour_InsertDisc_i_L0, #5
L_ConnectFour_InsertDisc3:
0x033B	0xC3      	CLR C
0x033C	0x7400    	MOV A, #0
0x033E	0x6480    	XRL A, #128
0x0340	0xF8      	MOV R0, A
0x0341	0xE519    	MOV A, ConnectFour_InsertDisc_i_L0
0x0343	0x6480    	XRL A, #128
0x0345	0x98      	SUBB A, R0
0x0346	0x4047    	JC L_ConnectFour_InsertDisc4
;connectfour.c,61 :: 		if(mGameMatrix[i][column - 1] == COLOR_BLACK){
0x0348	0x8519F0  	MOV B, ConnectFour_InsertDisc_i_L0+0
0x034B	0x7407    	MOV A, #7
0x034D	0xA4      	MUL AB
0x034E	0xF8      	MOV R0, A
0x034F	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0351	0x28      	ADD A, R0
0x0352	0xFA      	MOV R2, A
0x0353	0xC3      	CLR C
0x0354	0xE518    	MOV A, FARG_ConnectFour_InsertDisc_column
0x0356	0x9401    	SUBB A, #1
0x0358	0xF8      	MOV R0, A
0x0359	0xE4      	CLR A
0x035A	0x9400    	SUBB A, #0
0x035C	0xF9      	MOV R1, A
0x035D	0xEA      	MOV A, R2
0x035E	0x28      	ADD A, R0
0x035F	0xF8      	MOV R0, A
0x0360	0x8601    	MOV R1, @R0
0x0362	0xE9      	MOV A, R1
0x0363	0x7026    	JNZ L_ConnectFour_InsertDisc6
;connectfour.c,62 :: 		mGameMatrix[i][column - 1] = mCurrentPlayerColor;
0x0365	0x8519F0  	MOV B, ConnectFour_InsertDisc_i_L0+0
0x0368	0x7407    	MOV A, #7
0x036A	0xA4      	MUL AB
0x036B	0xF8      	MOV R0, A
0x036C	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x036E	0x28      	ADD A, R0
0x036F	0xFA      	MOV R2, A
0x0370	0xC3      	CLR C
0x0371	0xE518    	MOV A, FARG_ConnectFour_InsertDisc_column
0x0373	0x9401    	SUBB A, #1
0x0375	0xF8      	MOV R0, A
0x0376	0xE4      	CLR A
0x0377	0x9400    	SUBB A, #0
0x0379	0xF9      	MOV R1, A
0x037A	0xEA      	MOV A, R2
0x037B	0x28      	ADD A, R0
0x037C	0xF8      	MOV R0, A
0x037D	0xA608    	MOV @R0, connectfour_mCurrentPlayerColor
;connectfour.c,63 :: 		mDiscXPosition = i;
0x037F	0x85190A  	MOV connectfour_mDiscXPosition, ConnectFour_InsertDisc_i_L0+0
;connectfour.c,64 :: 		mDiscYPosition = column - 1;
0x0382	0xC3      	CLR C
0x0383	0xE518    	MOV A, FARG_ConnectFour_InsertDisc_column
0x0385	0x9401    	SUBB A, #1
0x0387	0xF509    	MOV connectfour_mDiscYPosition, A
;connectfour.c,65 :: 		break;
0x0389	0x8004    	SJMP L_ConnectFour_InsertDisc4
;connectfour.c,66 :: 		}
L_ConnectFour_InsertDisc6:
;connectfour.c,60 :: 		for(i = 5; i >= 0; i--){
0x038B	0x1519    	DEC ConnectFour_InsertDisc_i_L0
;connectfour.c,67 :: 		}
0x038D	0x80AC    	SJMP L_ConnectFour_InsertDisc3
L_ConnectFour_InsertDisc4:
;connectfour.c,69 :: 		for(j = 0; j < i; j++){
0x038F	0x751A00  	MOV ConnectFour_InsertDisc_j_L0, #0
L_ConnectFour_InsertDisc7:
0x0392	0xC3      	CLR C
0x0393	0xE519    	MOV A, ConnectFour_InsertDisc_i_L0
0x0395	0x6480    	XRL A, #128
0x0397	0xF8      	MOV R0, A
0x0398	0xE51A    	MOV A, ConnectFour_InsertDisc_j_L0
0x039A	0x6480    	XRL A, #128
0x039C	0x98      	SUBB A, R0
0x039D	0x5023    	JNC L_ConnectFour_InsertDisc8
;connectfour.c,70 :: 		Graphics_SetPixel(j, column, mCurrentPlayerColor);
0x039F	0x851A25  	MOV FARG_Graphics_SetPixel_row, ConnectFour_InsertDisc_j_L0+0
0x03A2	0x851826  	MOV FARG_Graphics_SetPixel_column, FARG_ConnectFour_InsertDisc_column+0
0x03A5	0x850827  	MOV FARG_Graphics_SetPixel_color, connectfour_mCurrentPlayerColor+0
0x03A8	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,71 :: 		Delay_ms(100);
0x03AA	0x7EA3    	MOV R6, 163
0x03AC	0x7F1E    	MOV R7, 30
0x03AE	0xDFFE    	DJNZ R7, PC-2
0x03B0	0xDEFC    	DJNZ R6, PC-4
0x03B2	0x00      	NOP
;connectfour.c,72 :: 		Graphics_SetPixel(j, column, COLOR_BLACK);
0x03B3	0x851A25  	MOV FARG_Graphics_SetPixel_row, ConnectFour_InsertDisc_j_L0+0
0x03B6	0x851826  	MOV FARG_Graphics_SetPixel_column, FARG_ConnectFour_InsertDisc_column+0
0x03B9	0x752700  	MOV FARG_Graphics_SetPixel_color, #0
0x03BC	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,69 :: 		for(j = 0; j < i; j++){
0x03BE	0x051A    	INC ConnectFour_InsertDisc_j_L0
;connectfour.c,73 :: 		}
0x03C0	0x80D0    	SJMP L_ConnectFour_InsertDisc7
L_ConnectFour_InsertDisc8:
;connectfour.c,75 :: 		if(i >= 0){
0x03C2	0xC3      	CLR C
0x03C3	0x7400    	MOV A, #0
0x03C5	0x6480    	XRL A, #128
0x03C7	0xF8      	MOV R0, A
0x03C8	0xE519    	MOV A, ConnectFour_InsertDisc_i_L0
0x03CA	0x6480    	XRL A, #128
0x03CC	0x98      	SUBB A, R0
0x03CD	0x400E    	JC L_ConnectFour_InsertDisc10
;connectfour.c,76 :: 		Graphics_SetPixel(i, column, mCurrentPlayerColor);
0x03CF	0x851925  	MOV FARG_Graphics_SetPixel_row, ConnectFour_InsertDisc_i_L0+0
0x03D2	0x851826  	MOV FARG_Graphics_SetPixel_column, FARG_ConnectFour_InsertDisc_column+0
0x03D5	0x850827  	MOV FARG_Graphics_SetPixel_color, connectfour_mCurrentPlayerColor+0
0x03D8	0x112E    	ACALL _Graphics_SetPixel
;connectfour.c,77 :: 		return 1;
0x03DA	0x7801    	MOV R0, #1
0x03DC	0x22      	RET
;connectfour.c,78 :: 		}else{
L_ConnectFour_InsertDisc10:
;connectfour.c,79 :: 		return 0;
0x03DD	0x7800    	MOV R0, #0
;connectfour.c,81 :: 		}
0x03DF	0x22      	RET
; end of _ConnectFour_InsertDisc
_Timer_Miliseconds:
;timer.c,35 :: 		unsigned long Timer_Miliseconds(){
;timer.c,36 :: 		return mMiliseconds;
0x03E0	0xA80B    	MOV R0, timer_mMiliseconds
0x03E2	0xA90C    	MOV R1, timer_mMiliseconds+1
0x03E4	0xAA0D    	MOV R2, timer_mMiliseconds+2
0x03E6	0xAB0E    	MOV R3, timer_mMiliseconds+3
;timer.c,37 :: 		}
0x03E8	0x22      	RET
; end of _Timer_Miliseconds
_ConnectFour_CheckWinner:
;connectfour.c,88 :: 		unsigned char ConnectFour_CheckWinner(){
;connectfour.c,91 :: 		unsigned char hits = 0;
0x03E9	0x751800  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,93 :: 		for(j = mDiscYPosition; j >= 0; j--){
0x03EC	0x85091A  	MOV ConnectFour_CheckWinner_j_L0, connectfour_mDiscYPosition+0
L_ConnectFour_CheckWinner12:
0x03EF	0xC3      	CLR C
0x03F0	0x7400    	MOV A, #0
0x03F2	0x6480    	XRL A, #128
0x03F4	0xF8      	MOV R0, A
0x03F5	0xE51A    	MOV A, ConnectFour_CheckWinner_j_L0
0x03F7	0x6480    	XRL A, #128
0x03F9	0x98      	SUBB A, R0
0x03FA	0x404D    	JC L_ConnectFour_CheckWinner13
;connectfour.c,94 :: 		if(mGameMatrix[mDiscXPosition][j] == mCurrentPlayerColor){
0x03FC	0x850AF0  	MOV B, connectfour_mDiscXPosition+0
0x03FF	0x7407    	MOV A, #7
0x0401	0xA4      	MUL AB
0x0402	0xF8      	MOV R0, A
0x0403	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0405	0x28      	ADD A, R0
0x0406	0xF8      	MOV R0, A
0x0407	0x251A    	ADD A, ConnectFour_CheckWinner_j_L0
0x0409	0xF8      	MOV R0, A
0x040A	0x8601    	MOV R1, @R0
0x040C	0xE9      	MOV A, R1
0x040D	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x040F	0x7032    	JNZ L_ConnectFour_CheckWinner15
;connectfour.c,95 :: 		mWinnersDiscsPosition[hits][0] = mDiscXPosition;
0x0411	0x7901    	MOV R1, #1
0x0413	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0415	0x09      	INC R1
0x0416	0x8002    	SJMP L__ConnectFour_CheckWinner86
L__ConnectFour_CheckWinner87:
0x0418	0xC3      	CLR C
0x0419	0x33      	RLC A
L__ConnectFour_CheckWinner86:
0x041A	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner87
0x041C	0xF8      	MOV R0, A
0x041D	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x041F	0x28      	ADD A, R0
0x0420	0xF8      	MOV R0, A
0x0421	0xA60A    	MOV @R0, connectfour_mDiscXPosition
;connectfour.c,96 :: 		mWinnersDiscsPosition[hits][1] = j;
0x0423	0x7901    	MOV R1, #1
0x0425	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0427	0x09      	INC R1
0x0428	0x8002    	SJMP L__ConnectFour_CheckWinner88
L__ConnectFour_CheckWinner89:
0x042A	0xC3      	CLR C
0x042B	0x33      	RLC A
L__ConnectFour_CheckWinner88:
0x042C	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner89
0x042E	0xF8      	MOV R0, A
0x042F	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0431	0x28      	ADD A, R0
0x0432	0xF8      	MOV R0, A
0x0433	0x08      	INC R0
0x0434	0xA61A    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,97 :: 		if(++hits == 4){
0x0436	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x0438	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x043A	0x6404    	XRL A, #4
0x043C	0x7003    	JNZ L_ConnectFour_CheckWinner16
;connectfour.c,98 :: 		return 1;
0x043E	0x7801    	MOV R0, #1
0x0440	0x22      	RET
;connectfour.c,99 :: 		}
L_ConnectFour_CheckWinner16:
;connectfour.c,100 :: 		}else{
0x0441	0x8002    	SJMP L_ConnectFour_CheckWinner17
L_ConnectFour_CheckWinner15:
;connectfour.c,101 :: 		break;
0x0443	0x8004    	SJMP L_ConnectFour_CheckWinner13
;connectfour.c,102 :: 		}
L_ConnectFour_CheckWinner17:
;connectfour.c,93 :: 		for(j = mDiscYPosition; j >= 0; j--){
0x0445	0x151A    	DEC ConnectFour_CheckWinner_j_L0
;connectfour.c,103 :: 		}
0x0447	0x80A6    	SJMP L_ConnectFour_CheckWinner12
L_ConnectFour_CheckWinner13:
;connectfour.c,105 :: 		for(j = mDiscYPosition + 1; j < 7; j++){
0x0449	0xE509    	MOV A, connectfour_mDiscYPosition
0x044B	0x2401    	ADD A, #1
0x044D	0xF51A    	MOV ConnectFour_CheckWinner_j_L0, A
L_ConnectFour_CheckWinner18:
0x044F	0xC3      	CLR C
0x0450	0x7407    	MOV A, #7
0x0452	0x6480    	XRL A, #128
0x0454	0xF8      	MOV R0, A
0x0455	0xE51A    	MOV A, ConnectFour_CheckWinner_j_L0
0x0457	0x6480    	XRL A, #128
0x0459	0x98      	SUBB A, R0
0x045A	0x504D    	JNC L_ConnectFour_CheckWinner19
;connectfour.c,106 :: 		if(mGameMatrix[mDiscXPosition][j] == mCurrentPlayerColor){
0x045C	0x850AF0  	MOV B, connectfour_mDiscXPosition+0
0x045F	0x7407    	MOV A, #7
0x0461	0xA4      	MUL AB
0x0462	0xF8      	MOV R0, A
0x0463	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x0465	0x28      	ADD A, R0
0x0466	0xF8      	MOV R0, A
0x0467	0x251A    	ADD A, ConnectFour_CheckWinner_j_L0
0x0469	0xF8      	MOV R0, A
0x046A	0x8601    	MOV R1, @R0
0x046C	0xE9      	MOV A, R1
0x046D	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x046F	0x7032    	JNZ L_ConnectFour_CheckWinner21
;connectfour.c,107 :: 		mWinnersDiscsPosition[hits][0] = mDiscXPosition;
0x0471	0x7901    	MOV R1, #1
0x0473	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0475	0x09      	INC R1
0x0476	0x8002    	SJMP L__ConnectFour_CheckWinner90
L__ConnectFour_CheckWinner91:
0x0478	0xC3      	CLR C
0x0479	0x33      	RLC A
L__ConnectFour_CheckWinner90:
0x047A	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner91
0x047C	0xF8      	MOV R0, A
0x047D	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x047F	0x28      	ADD A, R0
0x0480	0xF8      	MOV R0, A
0x0481	0xA60A    	MOV @R0, connectfour_mDiscXPosition
;connectfour.c,108 :: 		mWinnersDiscsPosition[hits][1] = j;
0x0483	0x7901    	MOV R1, #1
0x0485	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0487	0x09      	INC R1
0x0488	0x8002    	SJMP L__ConnectFour_CheckWinner92
L__ConnectFour_CheckWinner93:
0x048A	0xC3      	CLR C
0x048B	0x33      	RLC A
L__ConnectFour_CheckWinner92:
0x048C	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner93
0x048E	0xF8      	MOV R0, A
0x048F	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0491	0x28      	ADD A, R0
0x0492	0xF8      	MOV R0, A
0x0493	0x08      	INC R0
0x0494	0xA61A    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,109 :: 		if(++hits == 4){
0x0496	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x0498	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x049A	0x6404    	XRL A, #4
0x049C	0x7003    	JNZ L_ConnectFour_CheckWinner22
;connectfour.c,110 :: 		return 1;
0x049E	0x7801    	MOV R0, #1
0x04A0	0x22      	RET
;connectfour.c,111 :: 		}
L_ConnectFour_CheckWinner22:
;connectfour.c,112 :: 		}else{
0x04A1	0x8002    	SJMP L_ConnectFour_CheckWinner23
L_ConnectFour_CheckWinner21:
;connectfour.c,113 :: 		break;
0x04A3	0x8004    	SJMP L_ConnectFour_CheckWinner19
;connectfour.c,114 :: 		}
L_ConnectFour_CheckWinner23:
;connectfour.c,105 :: 		for(j = mDiscYPosition + 1; j < 7; j++){
0x04A5	0x051A    	INC ConnectFour_CheckWinner_j_L0
;connectfour.c,115 :: 		}
0x04A7	0x80A6    	SJMP L_ConnectFour_CheckWinner18
L_ConnectFour_CheckWinner19:
;connectfour.c,117 :: 		hits = 0;
0x04A9	0x751800  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,119 :: 		for(i = mDiscXPosition, j = mDiscYPosition; i < 6 && j >= 0; i++, j--){
0x04AC	0x850A19  	MOV ConnectFour_CheckWinner_i_L0, connectfour_mDiscXPosition+0
0x04AF	0x85091A  	MOV ConnectFour_CheckWinner_j_L0, connectfour_mDiscYPosition+0
L_ConnectFour_CheckWinner24:
0x04B2	0xC3      	CLR C
0x04B3	0x7406    	MOV A, #6
0x04B5	0x6480    	XRL A, #128
0x04B7	0xF8      	MOV R0, A
0x04B8	0xE519    	MOV A, ConnectFour_CheckWinner_i_L0
0x04BA	0x6480    	XRL A, #128
0x04BC	0x98      	SUBB A, R0
0x04BD	0x4002    	JC #2
0x04BF	0xA11D    	AJMP L_ConnectFour_CheckWinner25
0x04C1	0xC3      	CLR C
0x04C2	0x7400    	MOV A, #0
0x04C4	0x6480    	XRL A, #128
0x04C6	0xF8      	MOV R0, A
0x04C7	0xE51A    	MOV A, ConnectFour_CheckWinner_j_L0
0x04C9	0x6480    	XRL A, #128
0x04CB	0x98      	SUBB A, R0
0x04CC	0x404F    	JC L_ConnectFour_CheckWinner25
L__ConnectFour_CheckWinner85:
;connectfour.c,120 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x04CE	0x8519F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x04D1	0x7407    	MOV A, #7
0x04D3	0xA4      	MUL AB
0x04D4	0xF8      	MOV R0, A
0x04D5	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x04D7	0x28      	ADD A, R0
0x04D8	0xF8      	MOV R0, A
0x04D9	0x251A    	ADD A, ConnectFour_CheckWinner_j_L0
0x04DB	0xF8      	MOV R0, A
0x04DC	0x8601    	MOV R1, @R0
0x04DE	0xE9      	MOV A, R1
0x04DF	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x04E1	0x7032    	JNZ L_ConnectFour_CheckWinner29
;connectfour.c,121 :: 		mWinnersDiscsPosition[hits][0] = i;
0x04E3	0x7901    	MOV R1, #1
0x04E5	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x04E7	0x09      	INC R1
0x04E8	0x8002    	SJMP L__ConnectFour_CheckWinner94
L__ConnectFour_CheckWinner95:
0x04EA	0xC3      	CLR C
0x04EB	0x33      	RLC A
L__ConnectFour_CheckWinner94:
0x04EC	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner95
0x04EE	0xF8      	MOV R0, A
0x04EF	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x04F1	0x28      	ADD A, R0
0x04F2	0xF8      	MOV R0, A
0x04F3	0xA619    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,122 :: 		mWinnersDiscsPosition[hits][1] = j;
0x04F5	0x7901    	MOV R1, #1
0x04F7	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x04F9	0x09      	INC R1
0x04FA	0x8002    	SJMP L__ConnectFour_CheckWinner96
L__ConnectFour_CheckWinner97:
0x04FC	0xC3      	CLR C
0x04FD	0x33      	RLC A
L__ConnectFour_CheckWinner96:
0x04FE	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner97
0x0500	0xF8      	MOV R0, A
0x0501	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0503	0x28      	ADD A, R0
0x0504	0xF8      	MOV R0, A
0x0505	0x08      	INC R0
0x0506	0xA61A    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,123 :: 		if(++hits == 4){
0x0508	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x050A	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x050C	0x6404    	XRL A, #4
0x050E	0x7003    	JNZ L_ConnectFour_CheckWinner30
;connectfour.c,124 :: 		return 1;
0x0510	0x7801    	MOV R0, #1
0x0512	0x22      	RET
;connectfour.c,125 :: 		}
L_ConnectFour_CheckWinner30:
;connectfour.c,126 :: 		}else{
0x0513	0x8002    	SJMP L_ConnectFour_CheckWinner31
L_ConnectFour_CheckWinner29:
;connectfour.c,127 :: 		break;
0x0515	0x8006    	SJMP L_ConnectFour_CheckWinner25
;connectfour.c,128 :: 		}
L_ConnectFour_CheckWinner31:
;connectfour.c,119 :: 		for(i = mDiscXPosition, j = mDiscYPosition; i < 6 && j >= 0; i++, j--){
0x0517	0x0519    	INC ConnectFour_CheckWinner_i_L0
0x0519	0x151A    	DEC ConnectFour_CheckWinner_j_L0
;connectfour.c,129 :: 		}
0x051B	0x81B2    	AJMP L_ConnectFour_CheckWinner24
L_ConnectFour_CheckWinner25:
;connectfour.c,131 :: 		for(i = mDiscXPosition - 1, j = mDiscYPosition + 1; i >= 0 && j < 7; i--, j++){
0x051D	0xC3      	CLR C
0x051E	0xE50A    	MOV A, connectfour_mDiscXPosition
0x0520	0x9401    	SUBB A, #1
0x0522	0xF519    	MOV ConnectFour_CheckWinner_i_L0, A
0x0524	0xE509    	MOV A, connectfour_mDiscYPosition
0x0526	0x2401    	ADD A, #1
0x0528	0xF51A    	MOV ConnectFour_CheckWinner_j_L0, A
L_ConnectFour_CheckWinner32:
0x052A	0xC3      	CLR C
0x052B	0x7400    	MOV A, #0
0x052D	0x6480    	XRL A, #128
0x052F	0xF8      	MOV R0, A
0x0530	0xE519    	MOV A, ConnectFour_CheckWinner_i_L0
0x0532	0x6480    	XRL A, #128
0x0534	0x98      	SUBB A, R0
0x0535	0x5002    	JNC #2
0x0537	0xA195    	AJMP L_ConnectFour_CheckWinner33
0x0539	0xC3      	CLR C
0x053A	0x7407    	MOV A, #7
0x053C	0x6480    	XRL A, #128
0x053E	0xF8      	MOV R0, A
0x053F	0xE51A    	MOV A, ConnectFour_CheckWinner_j_L0
0x0541	0x6480    	XRL A, #128
0x0543	0x98      	SUBB A, R0
0x0544	0x504F    	JNC L_ConnectFour_CheckWinner33
L__ConnectFour_CheckWinner84:
;connectfour.c,132 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x0546	0x8519F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x0549	0x7407    	MOV A, #7
0x054B	0xA4      	MUL AB
0x054C	0xF8      	MOV R0, A
0x054D	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x054F	0x28      	ADD A, R0
0x0550	0xF8      	MOV R0, A
0x0551	0x251A    	ADD A, ConnectFour_CheckWinner_j_L0
0x0553	0xF8      	MOV R0, A
0x0554	0x8601    	MOV R1, @R0
0x0556	0xE9      	MOV A, R1
0x0557	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x0559	0x7032    	JNZ L_ConnectFour_CheckWinner37
;connectfour.c,133 :: 		mWinnersDiscsPosition[hits][0] = i;
0x055B	0x7901    	MOV R1, #1
0x055D	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x055F	0x09      	INC R1
0x0560	0x8002    	SJMP L__ConnectFour_CheckWinner98
L__ConnectFour_CheckWinner99:
0x0562	0xC3      	CLR C
0x0563	0x33      	RLC A
L__ConnectFour_CheckWinner98:
0x0564	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner99
0x0566	0xF8      	MOV R0, A
0x0567	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0569	0x28      	ADD A, R0
0x056A	0xF8      	MOV R0, A
0x056B	0xA619    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,134 :: 		mWinnersDiscsPosition[hits][1] = j;
0x056D	0x7901    	MOV R1, #1
0x056F	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0571	0x09      	INC R1
0x0572	0x8002    	SJMP L__ConnectFour_CheckWinner100
L__ConnectFour_CheckWinner101:
0x0574	0xC3      	CLR C
0x0575	0x33      	RLC A
L__ConnectFour_CheckWinner100:
0x0576	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner101
0x0578	0xF8      	MOV R0, A
0x0579	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x057B	0x28      	ADD A, R0
0x057C	0xF8      	MOV R0, A
0x057D	0x08      	INC R0
0x057E	0xA61A    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,135 :: 		if(++hits == 4){
0x0580	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x0582	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x0584	0x6404    	XRL A, #4
0x0586	0x7003    	JNZ L_ConnectFour_CheckWinner38
;connectfour.c,136 :: 		return 1;
0x0588	0x7801    	MOV R0, #1
0x058A	0x22      	RET
;connectfour.c,137 :: 		}
L_ConnectFour_CheckWinner38:
;connectfour.c,138 :: 		}else{
0x058B	0x8002    	SJMP L_ConnectFour_CheckWinner39
L_ConnectFour_CheckWinner37:
;connectfour.c,139 :: 		break;
0x058D	0x8006    	SJMP L_ConnectFour_CheckWinner33
;connectfour.c,140 :: 		}
L_ConnectFour_CheckWinner39:
;connectfour.c,131 :: 		for(i = mDiscXPosition - 1, j = mDiscYPosition + 1; i >= 0 && j < 7; i--, j++){
0x058F	0x1519    	DEC ConnectFour_CheckWinner_i_L0
0x0591	0x051A    	INC ConnectFour_CheckWinner_j_L0
;connectfour.c,141 :: 		}
0x0593	0xA12A    	AJMP L_ConnectFour_CheckWinner32
L_ConnectFour_CheckWinner33:
;connectfour.c,143 :: 		hits = 0;
0x0595	0x751800  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,145 :: 		for(i = mDiscXPosition, j = mDiscYPosition; i >= 0 && j >= 0; i--, j--){
0x0598	0x850A19  	MOV ConnectFour_CheckWinner_i_L0, connectfour_mDiscXPosition+0
0x059B	0x85091A  	MOV ConnectFour_CheckWinner_j_L0, connectfour_mDiscYPosition+0
L_ConnectFour_CheckWinner40:
0x059E	0xC3      	CLR C
0x059F	0x7400    	MOV A, #0
0x05A1	0x6480    	XRL A, #128
0x05A3	0xF8      	MOV R0, A
0x05A4	0xE519    	MOV A, ConnectFour_CheckWinner_i_L0
0x05A6	0x6480    	XRL A, #128
0x05A8	0x98      	SUBB A, R0
0x05A9	0x5002    	JNC #2
0x05AB	0xC109    	AJMP L_ConnectFour_CheckWinner41
0x05AD	0xC3      	CLR C
0x05AE	0x7400    	MOV A, #0
0x05B0	0x6480    	XRL A, #128
0x05B2	0xF8      	MOV R0, A
0x05B3	0xE51A    	MOV A, ConnectFour_CheckWinner_j_L0
0x05B5	0x6480    	XRL A, #128
0x05B7	0x98      	SUBB A, R0
0x05B8	0x404F    	JC L_ConnectFour_CheckWinner41
L__ConnectFour_CheckWinner83:
;connectfour.c,146 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x05BA	0x8519F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x05BD	0x7407    	MOV A, #7
0x05BF	0xA4      	MUL AB
0x05C0	0xF8      	MOV R0, A
0x05C1	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x05C3	0x28      	ADD A, R0
0x05C4	0xF8      	MOV R0, A
0x05C5	0x251A    	ADD A, ConnectFour_CheckWinner_j_L0
0x05C7	0xF8      	MOV R0, A
0x05C8	0x8601    	MOV R1, @R0
0x05CA	0xE9      	MOV A, R1
0x05CB	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x05CD	0x7032    	JNZ L_ConnectFour_CheckWinner45
;connectfour.c,147 :: 		mWinnersDiscsPosition[hits][0] = i;
0x05CF	0x7901    	MOV R1, #1
0x05D1	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x05D3	0x09      	INC R1
0x05D4	0x8002    	SJMP L__ConnectFour_CheckWinner102
L__ConnectFour_CheckWinner103:
0x05D6	0xC3      	CLR C
0x05D7	0x33      	RLC A
L__ConnectFour_CheckWinner102:
0x05D8	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner103
0x05DA	0xF8      	MOV R0, A
0x05DB	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x05DD	0x28      	ADD A, R0
0x05DE	0xF8      	MOV R0, A
0x05DF	0xA619    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,148 :: 		mWinnersDiscsPosition[hits][1] = j;
0x05E1	0x7901    	MOV R1, #1
0x05E3	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x05E5	0x09      	INC R1
0x05E6	0x8002    	SJMP L__ConnectFour_CheckWinner104
L__ConnectFour_CheckWinner105:
0x05E8	0xC3      	CLR C
0x05E9	0x33      	RLC A
L__ConnectFour_CheckWinner104:
0x05EA	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner105
0x05EC	0xF8      	MOV R0, A
0x05ED	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x05EF	0x28      	ADD A, R0
0x05F0	0xF8      	MOV R0, A
0x05F1	0x08      	INC R0
0x05F2	0xA61A    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,149 :: 		if(++hits == 4){
0x05F4	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x05F6	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x05F8	0x6404    	XRL A, #4
0x05FA	0x7003    	JNZ L_ConnectFour_CheckWinner46
;connectfour.c,150 :: 		return 1;
0x05FC	0x7801    	MOV R0, #1
0x05FE	0x22      	RET
;connectfour.c,151 :: 		}
L_ConnectFour_CheckWinner46:
;connectfour.c,152 :: 		}else{
0x05FF	0x8002    	SJMP L_ConnectFour_CheckWinner47
L_ConnectFour_CheckWinner45:
;connectfour.c,153 :: 		break;
0x0601	0x8006    	SJMP L_ConnectFour_CheckWinner41
;connectfour.c,154 :: 		}
L_ConnectFour_CheckWinner47:
;connectfour.c,145 :: 		for(i = mDiscXPosition, j = mDiscYPosition; i >= 0 && j >= 0; i--, j--){
0x0603	0x1519    	DEC ConnectFour_CheckWinner_i_L0
0x0605	0x151A    	DEC ConnectFour_CheckWinner_j_L0
;connectfour.c,155 :: 		}
0x0607	0xA19E    	AJMP L_ConnectFour_CheckWinner40
L_ConnectFour_CheckWinner41:
;connectfour.c,157 :: 		for(i = mDiscXPosition + 1, j = mDiscYPosition + 1; i < 6 && j < 7; i++, j++){
0x0609	0xE50A    	MOV A, connectfour_mDiscXPosition
0x060B	0x2401    	ADD A, #1
0x060D	0xF519    	MOV ConnectFour_CheckWinner_i_L0, A
0x060F	0xE509    	MOV A, connectfour_mDiscYPosition
0x0611	0x2401    	ADD A, #1
0x0613	0xF51A    	MOV ConnectFour_CheckWinner_j_L0, A
L_ConnectFour_CheckWinner48:
0x0615	0xC3      	CLR C
0x0616	0x7406    	MOV A, #6
0x0618	0x6480    	XRL A, #128
0x061A	0xF8      	MOV R0, A
0x061B	0xE519    	MOV A, ConnectFour_CheckWinner_i_L0
0x061D	0x6480    	XRL A, #128
0x061F	0x98      	SUBB A, R0
0x0620	0x4002    	JC #2
0x0622	0xC180    	AJMP L_ConnectFour_CheckWinner49
0x0624	0xC3      	CLR C
0x0625	0x7407    	MOV A, #7
0x0627	0x6480    	XRL A, #128
0x0629	0xF8      	MOV R0, A
0x062A	0xE51A    	MOV A, ConnectFour_CheckWinner_j_L0
0x062C	0x6480    	XRL A, #128
0x062E	0x98      	SUBB A, R0
0x062F	0x504F    	JNC L_ConnectFour_CheckWinner49
L__ConnectFour_CheckWinner82:
;connectfour.c,158 :: 		if(mGameMatrix[i][j] == mCurrentPlayerColor){
0x0631	0x8519F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x0634	0x7407    	MOV A, #7
0x0636	0xA4      	MUL AB
0x0637	0xF8      	MOV R0, A
0x0638	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x063A	0x28      	ADD A, R0
0x063B	0xF8      	MOV R0, A
0x063C	0x251A    	ADD A, ConnectFour_CheckWinner_j_L0
0x063E	0xF8      	MOV R0, A
0x063F	0x8601    	MOV R1, @R0
0x0641	0xE9      	MOV A, R1
0x0642	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x0644	0x7032    	JNZ L_ConnectFour_CheckWinner53
;connectfour.c,159 :: 		mWinnersDiscsPosition[hits][0] = i;
0x0646	0x7901    	MOV R1, #1
0x0648	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x064A	0x09      	INC R1
0x064B	0x8002    	SJMP L__ConnectFour_CheckWinner106
L__ConnectFour_CheckWinner107:
0x064D	0xC3      	CLR C
0x064E	0x33      	RLC A
L__ConnectFour_CheckWinner106:
0x064F	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner107
0x0651	0xF8      	MOV R0, A
0x0652	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0654	0x28      	ADD A, R0
0x0655	0xF8      	MOV R0, A
0x0656	0xA619    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,160 :: 		mWinnersDiscsPosition[hits][1] = j;
0x0658	0x7901    	MOV R1, #1
0x065A	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x065C	0x09      	INC R1
0x065D	0x8002    	SJMP L__ConnectFour_CheckWinner108
L__ConnectFour_CheckWinner109:
0x065F	0xC3      	CLR C
0x0660	0x33      	RLC A
L__ConnectFour_CheckWinner108:
0x0661	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner109
0x0663	0xF8      	MOV R0, A
0x0664	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x0666	0x28      	ADD A, R0
0x0667	0xF8      	MOV R0, A
0x0668	0x08      	INC R0
0x0669	0xA61A    	MOV @R0, ConnectFour_CheckWinner_j_L0
;connectfour.c,161 :: 		if(++hits == 4){
0x066B	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x066D	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x066F	0x6404    	XRL A, #4
0x0671	0x7003    	JNZ L_ConnectFour_CheckWinner54
;connectfour.c,162 :: 		return 1;
0x0673	0x7801    	MOV R0, #1
0x0675	0x22      	RET
;connectfour.c,163 :: 		}
L_ConnectFour_CheckWinner54:
;connectfour.c,164 :: 		}else{
0x0676	0x8002    	SJMP L_ConnectFour_CheckWinner55
L_ConnectFour_CheckWinner53:
;connectfour.c,165 :: 		break;
0x0678	0x8006    	SJMP L_ConnectFour_CheckWinner49
;connectfour.c,166 :: 		}
L_ConnectFour_CheckWinner55:
;connectfour.c,157 :: 		for(i = mDiscXPosition + 1, j = mDiscYPosition + 1; i < 6 && j < 7; i++, j++){
0x067A	0x0519    	INC ConnectFour_CheckWinner_i_L0
0x067C	0x051A    	INC ConnectFour_CheckWinner_j_L0
;connectfour.c,167 :: 		}
0x067E	0xC115    	AJMP L_ConnectFour_CheckWinner48
L_ConnectFour_CheckWinner49:
;connectfour.c,169 :: 		hits = 0;
0x0680	0x751800  	MOV ConnectFour_CheckWinner_hits_L0, #0
;connectfour.c,171 :: 		for(i = mDiscXPosition; i < 6; i++){
0x0683	0x850A19  	MOV ConnectFour_CheckWinner_i_L0, connectfour_mDiscXPosition+0
L_ConnectFour_CheckWinner56:
0x0686	0xC3      	CLR C
0x0687	0x7406    	MOV A, #6
0x0689	0x6480    	XRL A, #128
0x068B	0xF8      	MOV R0, A
0x068C	0xE519    	MOV A, ConnectFour_CheckWinner_i_L0
0x068E	0x6480    	XRL A, #128
0x0690	0x98      	SUBB A, R0
0x0691	0x504D    	JNC L_ConnectFour_CheckWinner57
;connectfour.c,172 :: 		if(mGameMatrix[i][mDiscYPosition] == mCurrentPlayerColor){
0x0693	0x8519F0  	MOV B, ConnectFour_CheckWinner_i_L0+0
0x0696	0x7407    	MOV A, #7
0x0698	0xA4      	MUL AB
0x0699	0xF8      	MOV R0, A
0x069A	0x7441    	MOV A, lo_addr(connectfour_mGameMatrix)
0x069C	0x28      	ADD A, R0
0x069D	0xF8      	MOV R0, A
0x069E	0x2509    	ADD A, connectfour_mDiscYPosition
0x06A0	0xF8      	MOV R0, A
0x06A1	0x8601    	MOV R1, @R0
0x06A3	0xE9      	MOV A, R1
0x06A4	0x6508    	XRL A, connectfour_mCurrentPlayerColor
0x06A6	0x7032    	JNZ L_ConnectFour_CheckWinner59
;connectfour.c,173 :: 		mWinnersDiscsPosition[hits][0] = i;
0x06A8	0x7901    	MOV R1, #1
0x06AA	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x06AC	0x09      	INC R1
0x06AD	0x8002    	SJMP L__ConnectFour_CheckWinner110
L__ConnectFour_CheckWinner111:
0x06AF	0xC3      	CLR C
0x06B0	0x33      	RLC A
L__ConnectFour_CheckWinner110:
0x06B1	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner111
0x06B3	0xF8      	MOV R0, A
0x06B4	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x06B6	0x28      	ADD A, R0
0x06B7	0xF8      	MOV R0, A
0x06B8	0xA619    	MOV @R0, ConnectFour_CheckWinner_i_L0
;connectfour.c,174 :: 		mWinnersDiscsPosition[hits][1] = mDiscYPosition;
0x06BA	0x7901    	MOV R1, #1
0x06BC	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x06BE	0x09      	INC R1
0x06BF	0x8002    	SJMP L__ConnectFour_CheckWinner112
L__ConnectFour_CheckWinner113:
0x06C1	0xC3      	CLR C
0x06C2	0x33      	RLC A
L__ConnectFour_CheckWinner112:
0x06C3	0xD9FC    	DJNZ R1, L__ConnectFour_CheckWinner113
0x06C5	0xF8      	MOV R0, A
0x06C6	0x7439    	MOV A, lo_addr(connectfour_mWinnersDiscsPosition)
0x06C8	0x28      	ADD A, R0
0x06C9	0xF8      	MOV R0, A
0x06CA	0x08      	INC R0
0x06CB	0xA609    	MOV @R0, connectfour_mDiscYPosition
;connectfour.c,175 :: 		if(++hits == 4){
0x06CD	0x0518    	INC ConnectFour_CheckWinner_hits_L0
0x06CF	0xE518    	MOV A, ConnectFour_CheckWinner_hits_L0
0x06D1	0x6404    	XRL A, #4
0x06D3	0x7003    	JNZ L_ConnectFour_CheckWinner60
;connectfour.c,176 :: 		return 1;
0x06D5	0x7801    	MOV R0, #1
0x06D7	0x22      	RET
;connectfour.c,177 :: 		}
L_ConnectFour_CheckWinner60:
;connectfour.c,178 :: 		}else{
0x06D8	0x8002    	SJMP L_ConnectFour_CheckWinner61
L_ConnectFour_CheckWinner59:
;connectfour.c,179 :: 		break;
0x06DA	0x8004    	SJMP L_ConnectFour_CheckWinner57
;connectfour.c,180 :: 		}
L_ConnectFour_CheckWinner61:
;connectfour.c,171 :: 		for(i = mDiscXPosition; i < 6; i++){
0x06DC	0x0519    	INC ConnectFour_CheckWinner_i_L0
;connectfour.c,181 :: 		}
0x06DE	0x80A6    	SJMP L_ConnectFour_CheckWinner56
L_ConnectFour_CheckWinner57:
;connectfour.c,182 :: 		return 0;
0x06E0	0x7800    	MOV R0, #0
;connectfour.c,183 :: 		}
0x06E2	0x22      	RET
; end of _ConnectFour_CheckWinner
_Display_Refresh:
0x06E3	0xC000    	PUSH R0
0x06E5	0xC001    	PUSH R1
0x06E7	0xC002    	PUSH R2
0x06E9	0xC0D0    	PUSH PSW
0x06EB	0xC0E0    	PUSH ACC
0x06ED	0xC0F0    	PUSH B
0x06EF	0xC082    	PUSH DP0L
0x06F1	0xC083    	PUSH DP0H
;display.c,62 :: 		void Display_Refresh() iv IVT_ADDR_ET0 {
;display.c,65 :: 		TR0_bit = 0;
0x06F3	0xC28C    	CLR TR0_bit
;display.c,67 :: 		TH0 = 0xF9;
0x06F5	0x758CF9  	MOV TH0, #249
;display.c,68 :: 		TL0 = 0x7D;
0x06F8	0x758A7D  	MOV TL0, #125
;display.c,70 :: 		Display_SetOutput(gMatrixRow[i], gMatrixRed[i], gMatrixGreen[i]);
0x06FB	0xE538    	MOV A, Display_Refresh_i_L0
0x06FD	0x24D0    	ADD A, lo_addr(_gMatrixRow)
0x06FF	0xF9      	MOV R1, A
0x0700	0xE4      	CLR A
0x0701	0x3408    	ADDC A, hi_addr(_gMatrixRow)
0x0703	0xFA      	MOV R2, A
0x0704	0x850182  	MOV DP0L, 1
0x0707	0x850283  	MOV DP0H, 2
0x070A	0xE4      	CLR A
0x070B	0x93      	MOVC A, @A+DPTR
0x070C	0xF8      	MOV R0, A
0x070D	0x850028  	MOV FARG_Display_SetOutput_row, 0
0x0710	0x746B    	MOV A, lo_addr(_gMatrixRed)
0x0712	0x2538    	ADD A, Display_Refresh_i_L0
0x0714	0xF8      	MOV R0, A
0x0715	0x8629    	MOV FARG_Display_SetOutput_red, @R0
0x0717	0x7430    	MOV A, lo_addr(_gMatrixGreen)
0x0719	0x2538    	ADD A, Display_Refresh_i_L0
0x071B	0xF8      	MOV R0, A
0x071C	0x862A    	MOV FARG_Display_SetOutput_green, @R0
0x071E	0x51A5    	ACALL _Display_SetOutput
;display.c,71 :: 		i++;
0x0720	0x0538    	INC Display_Refresh_i_L0
;display.c,73 :: 		if(i == 8){
0x0722	0xE538    	MOV A, Display_Refresh_i_L0
0x0724	0x6408    	XRL A, #8
0x0726	0x7003    	JNZ L_Display_Refresh0
;display.c,74 :: 		i = 0;
0x0728	0x753800  	MOV Display_Refresh_i_L0, #0
;display.c,75 :: 		}
L_Display_Refresh0:
;display.c,77 :: 		TR0_bit = 1;
0x072B	0xD28C    	SETB TR0_bit
;display.c,78 :: 		}
0x072D	0xD083    	POP DP0H
0x072F	0xD082    	POP DP0L
0x0731	0xD0F0    	POP B
0x0733	0xD0E0    	POP ACC
0x0735	0xD0D0    	POP PSW
0x0737	0xD002    	POP R2
0x0739	0xD001    	POP R1
0x073B	0xD000    	POP R0
0x073D	0x32      	RETI
; end of _Display_Refresh
_main:
0x073E	0x758180  	MOV SP, #128
0x0741	0x1208D9  	LCALL 2265
;main.c,18 :: 		void main(){
;main.c,29 :: 		Init();
0x0744	0x51B8    	ACALL _Init
;main.c,32 :: 		do{
L_main0:
;main.c,33 :: 		do{
L_main3:
;main.c,35 :: 		do{
L_main6:
;main.c,36 :: 		keyIndex = Keypad_Key_Click();
0x0746	0x51C1    	ACALL _Keypad_Key_Click
;main.c,37 :: 		key = keys[keyIndex];
0x0748	0xE8      	MOV A, R0
0x0749	0x24B7    	ADD A, lo_addr(_keys)
0x074B	0xF8      	MOV R0, A
0x074C	0xE4      	CLR A
0x074D	0x3408    	ADDC A, hi_addr(_keys)
0x074F	0xF9      	MOV R1, A
0x0750	0x850082  	MOV DP0L, 0
0x0753	0x850183  	MOV DP0H, 1
0x0756	0xE4      	CLR A
0x0757	0x93      	MOVC A, @A+DPTR
0x0758	0xFA      	MOV R2, A
0x0759	0x85020F  	MOV main_key_L0, 2
;main.c,38 :: 		} while(key != 'D' && (key < '1' || key > '7'));
0x075C	0xEA      	MOV A, R2
0x075D	0x6444    	XRL A, #68
0x075F	0x6012    	JZ L__main24
0x0761	0xC3      	CLR C
0x0762	0xE50F    	MOV A, main_key_L0
0x0764	0x9431    	SUBB A, #49
0x0766	0x4009    	JC L__main25
0x0768	0xD3      	SETB C
0x0769	0xE50F    	MOV A, main_key_L0
0x076B	0x9437    	SUBB A, #55
0x076D	0x5002    	JNC L__main25
0x076F	0x8002    	SJMP L__main24
L__main25:
0x0771	0x80D3    	SJMP L_main6
L__main24:
;main.c,40 :: 		if(key == 'D'){
0x0773	0xE50F    	MOV A, main_key_L0
0x0775	0x6444    	XRL A, #68
0x0777	0x7004    	JNZ L_main13
;main.c,41 :: 		ConnectFour_NewGame();
0x0779	0x51D6    	ACALL _ConnectFour_NewGame
;main.c,42 :: 		break;
0x077B	0x800C    	SJMP L_main4
;main.c,43 :: 		}
L_main13:
;main.c,45 :: 		discInserted = ConnectFour_InsertDisc(key - 48);
0x077D	0xC3      	CLR C
0x077E	0xE50F    	MOV A, main_key_L0
0x0780	0x9430    	SUBB A, #48
0x0782	0xF518    	MOV FARG_ConnectFour_InsertDisc_column, A
0x0784	0x7138    	ACALL _ConnectFour_InsertDisc
;main.c,46 :: 		}while(!discInserted);
0x0786	0xE8      	MOV A, R0
0x0787	0x60BD    	JZ L_main3
L_main4:
;main.c,48 :: 		if(key != 'D'){
0x0789	0xE50F    	MOV A, main_key_L0
0x078B	0x6444    	XRL A, #68
0x078D	0x7003    	JNZ #3
0x078F	0x020841  	LJMP L_main14
;main.c,50 :: 		hasWinner = ConnectFour_CheckWinner();
0x0792	0x71E9    	ACALL _ConnectFour_CheckWinner
;main.c,52 :: 		if(hasWinner){
0x0794	0xE8      	MOV A, R0
0x0795	0x7003    	JNZ #3
0x0797	0x02083E  	LJMP L_main15
;main.c,53 :: 		startTime = Timer_Miliseconds();
0x079A	0x71E0    	ACALL _Timer_Miliseconds
0x079C	0x850010  	MOV main_startTime_L0, 0
0x079F	0x850111  	MOV main_startTime_L0+1, 1
0x07A2	0x850212  	MOV main_startTime_L0+2, 2
0x07A5	0x850313  	MOV main_startTime_L0+3, 3
;main.c,54 :: 		do{
L_main16:
;main.c,55 :: 		stopTime = Timer_Miliseconds();
0x07A8	0x71E0    	ACALL _Timer_Miliseconds
0x07AA	0x850014  	MOV main_stopTime_L0, 0
0x07AD	0x850115  	MOV main_stopTime_L0+1, 1
0x07B0	0x850216  	MOV main_stopTime_L0+2, 2
0x07B3	0x850317  	MOV main_stopTime_L0+3, 3
;main.c,57 :: 		if(stopTime - startTime < 500){
0x07B6	0xC3      	CLR C
0x07B7	0xE8      	MOV A, R0
0x07B8	0x9510    	SUBB A, main_startTime_L0
0x07BA	0xFC      	MOV R4, A
0x07BB	0xE9      	MOV A, R1
0x07BC	0x9511    	SUBB A, main_startTime_L0+1
0x07BE	0xFD      	MOV R5, A
0x07BF	0xEA      	MOV A, R2
0x07C0	0x9512    	SUBB A, main_startTime_L0+2
0x07C2	0xFE      	MOV R6, A
0x07C3	0xEB      	MOV A, R3
0x07C4	0x9513    	SUBB A, main_startTime_L0+3
0x07C6	0xF507    	MOV R7, A
0x07C8	0xC3      	CLR C
0x07C9	0xEC      	MOV A, R4
0x07CA	0x94F4    	SUBB A, #244
0x07CC	0xED      	MOV A, R5
0x07CD	0x9401    	SUBB A, #1
0x07CF	0xEE      	MOV A, R6
0x07D0	0x9400    	SUBB A, #0
0x07D2	0xE507    	MOV A, R7
0x07D4	0x9400    	SUBB A, #0
0x07D6	0x5007    	JNC L_main19
;main.c,58 :: 		ConnectFour_TurnWinnersDiscs(1);
0x07D8	0x751801  	MOV FARG_ConnectFour_TurnWinnersDiscs_onOff, #1
0x07DB	0x5140    	ACALL _ConnectFour_TurnWinnersDiscs
;main.c,59 :: 		}
0x07DD	0x803B    	SJMP L_main20
L_main19:
;main.c,61 :: 		else if(stopTime - startTime < 1000){
0x07DF	0xC3      	CLR C
0x07E0	0xE514    	MOV A, main_stopTime_L0
0x07E2	0x9510    	SUBB A, main_startTime_L0
0x07E4	0xF9      	MOV R1, A
0x07E5	0xE515    	MOV A, main_stopTime_L0+1
0x07E7	0x9511    	SUBB A, main_startTime_L0+1
0x07E9	0xFA      	MOV R2, A
0x07EA	0xE516    	MOV A, main_stopTime_L0+2
0x07EC	0x9512    	SUBB A, main_startTime_L0+2
0x07EE	0xFB      	MOV R3, A
0x07EF	0xE517    	MOV A, main_stopTime_L0+3
0x07F1	0x9513    	SUBB A, main_startTime_L0+3
0x07F3	0xFC      	MOV R4, A
0x07F4	0xC3      	CLR C
0x07F5	0xE9      	MOV A, R1
0x07F6	0x94E8    	SUBB A, #232
0x07F8	0xEA      	MOV A, R2
0x07F9	0x9403    	SUBB A, #3
0x07FB	0xEB      	MOV A, R3
0x07FC	0x9400    	SUBB A, #0
0x07FE	0xEC      	MOV A, R4
0x07FF	0x9400    	SUBB A, #0
0x0801	0x5008    	JNC L_main21
;main.c,62 :: 		ConnectFour_TurnWinnersDiscs(0);
0x0803	0x751800  	MOV FARG_ConnectFour_TurnWinnersDiscs_onOff, #0
0x0806	0x120240  	LCALL _ConnectFour_TurnWinnersDiscs
;main.c,63 :: 		}
0x0809	0x800F    	SJMP L_main22
L_main21:
;main.c,66 :: 		startTime = Timer_Miliseconds();
0x080B	0x1203E0  	LCALL _Timer_Miliseconds
0x080E	0x850010  	MOV main_startTime_L0, 0
0x0811	0x850111  	MOV main_startTime_L0+1, 1
0x0814	0x850212  	MOV main_startTime_L0+2, 2
0x0817	0x850313  	MOV main_startTime_L0+3, 3
;main.c,67 :: 		}
L_main22:
L_main20:
;main.c,69 :: 		keyIndex = Keypad_Key_Click();
0x081A	0x1202C1  	LCALL _Keypad_Key_Click
;main.c,70 :: 		key = keys[keyIndex];
0x081D	0xE8      	MOV A, R0
0x081E	0x24B7    	ADD A, lo_addr(_keys)
0x0820	0xF8      	MOV R0, A
0x0821	0xE4      	CLR A
0x0822	0x3408    	ADDC A, hi_addr(_keys)
0x0824	0xF9      	MOV R1, A
0x0825	0x850082  	MOV DP0L, 0
0x0828	0x850183  	MOV DP0H, 1
0x082B	0xE4      	CLR A
0x082C	0x93      	MOVC A, @A+DPTR
0x082D	0xFA      	MOV R2, A
0x082E	0x85020F  	MOV main_key_L0, 2
;main.c,71 :: 		}while(key != 'D');
0x0831	0xEA      	MOV A, R2
0x0832	0x6444    	XRL A, #68
0x0834	0x6003    	JZ #3
0x0836	0x0207A8  	LJMP L_main16
;main.c,73 :: 		ConnectFour_NewGame();
0x0839	0x1202D6  	LCALL _ConnectFour_NewGame
;main.c,74 :: 		}
0x083C	0x8003    	SJMP L_main23
L_main15:
;main.c,78 :: 		ConnectFour_SwitchPlayer();
0x083E	0x12020F  	LCALL _ConnectFour_SwitchPlayer
;main.c,79 :: 		}
L_main23:
;main.c,80 :: 		}
L_main14:
;main.c,81 :: 		}while(1);
0x0841	0x020746  	LJMP L_main0
;main.c,83 :: 		}
0x0844	0x80FE    	SJMP #254
; end of _main
_Timer_Tick:
0x0846	0xC0D0    	PUSH PSW
0x0848	0xC0E0    	PUSH ACC
0x084A	0xC0F0    	PUSH B
0x084C	0xC082    	PUSH DP0L
0x084E	0xC083    	PUSH DP0H
;timer.c,44 :: 		void Timer_Tick() iv IVT_ADDR_ET1 {
;timer.c,46 :: 		TR1_bit = 0;
0x0850	0xC28E    	CLR TR1_bit
;timer.c,48 :: 		TH1 = 0xFC;
0x0852	0x758DFC  	MOV TH1, #252
;timer.c,49 :: 		TL1 = 0xBE;
0x0855	0x758BBE  	MOV TL1, #190
;timer.c,51 :: 		mMiliseconds++;
0x0858	0x7401    	MOV A, #1
0x085A	0x250B    	ADD A, timer_mMiliseconds
0x085C	0xF50B    	MOV timer_mMiliseconds, A
0x085E	0x7400    	MOV A, #0
0x0860	0x350C    	ADDC A, timer_mMiliseconds+1
0x0862	0xF50C    	MOV timer_mMiliseconds+1, A
0x0864	0x7400    	MOV A, #0
0x0866	0x350D    	ADDC A, timer_mMiliseconds+2
0x0868	0xF50D    	MOV timer_mMiliseconds+2, A
0x086A	0x7400    	MOV A, #0
0x086C	0x350E    	ADDC A, timer_mMiliseconds+3
0x086E	0xF50E    	MOV timer_mMiliseconds+3, A
;timer.c,53 :: 		TR1_bit = 1;
0x0870	0xD28E    	SETB TR1_bit
;timer.c,54 :: 		}
0x0872	0xD083    	POP DP0H
0x0874	0xD082    	POP DP0L
0x0876	0xD0F0    	POP B
0x0878	0xD0E0    	POP ACC
0x087A	0xD0D0    	POP PSW
0x087C	0x32      	RETI
; end of _Timer_Tick
0x08D9	0x7830    	MOV R0, 48
0x08DB	0x7908    	MOV R1, 8
0x08DD	0x7582C8  	MOV DP0L, 200
0x08E0	0x758308  	MOV DP0H, 8
0x08E3	0x12029D  	LCALL 669
0x08E6	0x7838    	MOV R0, 56
0x08E8	0x7901    	MOV R1, 1
0x08EA	0x7582D8  	MOV DP0L, 216
0x08ED	0x758308  	MOV DP0H, 8
0x08F0	0x12029D  	LCALL 669
0x08F3	0x7839    	MOV R0, 57
0x08F5	0x793A    	MOV R1, 58
0x08F7	0x75827D  	MOV DP0L, 125
0x08FA	0x758308  	MOV DP0H, 8
0x08FD	0x12029D  	LCALL 669
0x0900	0x22      	RET
;connectfour.c,0 :: ?ICSconnectfour_mWinnersDiscsPosition
0x087D	0x000000 ;?ICSconnectfour_mWinnersDiscsPosition+0
0x0880	0x000000 ;?ICSconnectfour_mWinnersDiscsPosition+3
0x0883	0x0000 ;?ICSconnectfour_mWinnersDiscsPosition+6
; end of ?ICSconnectfour_mWinnersDiscsPosition
;connectfour.c,0 :: ?ICSconnectfour_mGameMatrix
0x0885	0x000000 ;?ICSconnectfour_mGameMatrix+0
0x0888	0x000000 ;?ICSconnectfour_mGameMatrix+3
0x088B	0x000000 ;?ICSconnectfour_mGameMatrix+6
0x088E	0x000000 ;?ICSconnectfour_mGameMatrix+9
0x0891	0x000000 ;?ICSconnectfour_mGameMatrix+12
0x0894	0x000000 ;?ICSconnectfour_mGameMatrix+15
0x0897	0x000000 ;?ICSconnectfour_mGameMatrix+18
0x089A	0x000000 ;?ICSconnectfour_mGameMatrix+21
0x089D	0x000000 ;?ICSconnectfour_mGameMatrix+24
0x08A0	0x000000 ;?ICSconnectfour_mGameMatrix+27
0x08A3	0x000000 ;?ICSconnectfour_mGameMatrix+30
0x08A6	0x000000 ;?ICSconnectfour_mGameMatrix+33
0x08A9	0x000000 ;?ICSconnectfour_mGameMatrix+36
0x08AC	0x000000 ;?ICSconnectfour_mGameMatrix+39
; end of ?ICSconnectfour_mGameMatrix
;display.c,0 :: ?ICS_gMatrixRed
0x08AF	0x000000 ;?ICS_gMatrixRed+0
0x08B2	0x000000 ;?ICS_gMatrixRed+3
0x08B5	0x0000 ;?ICS_gMatrixRed+6
; end of ?ICS_gMatrixRed
;main.c,8 :: _keys
0x08B7	0x003132 ;_keys+0
0x08BA	0x334134 ;_keys+3
0x08BD	0x353642 ;_keys+6
0x08C0	0x373839 ;_keys+9
0x08C3	0x432A30 ;_keys+12
0x08C6	0x2344 ;_keys+15
; end of _keys
;display.c,0 :: ?ICS_gMatrixGreen
0x08C8	0x000000 ;?ICS_gMatrixGreen+0
0x08CB	0x000000 ;?ICS_gMatrixGreen+3
0x08CE	0x0000 ;?ICS_gMatrixGreen+6
; end of ?ICS_gMatrixGreen
;display.c,15 :: _gMatrixRow
0x08D0	0x010204 ;_gMatrixRow+0
0x08D3	0x081020 ;_gMatrixRow+3
0x08D6	0x4080 ;_gMatrixRow+6
; end of _gMatrixRow
;display.c,0 :: ?ICSDisplay_Refresh_i_L0
0x08D8	0x00 ;?ICSDisplay_Refresh_i_L0+0
; end of ?ICSDisplay_Refresh_i_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x002E     [243]    _Graphics_SetPixel
0x0121      [26]    _Graphics_HorizontalLine
0x013B       [2]    _Delay_1us
0x013D     [102]    _Keypad_Key_Press
0x01A3      [27]    _Timer_Init
0x01BE       [4]    _Keypad_Init
0x01C2      [18]    _ConnectFour_Init
0x01D4      [24]    _Display_Init
0x01EC       [6]    _Delay_10us
0x01F2      [29]    _Graphics_ClearDisplay
0x020F      [49]    _ConnectFour_SwitchPlayer
0x0240      [93]    _ConnectFour_TurnWinnersDiscs
0x029D       [8]    ___CC2D
0x02A5      [19]    _Display_SetOutput
0x02B8       [9]    _Init
0x02C1      [21]    _Keypad_Key_Click
0x02D6      [98]    _ConnectFour_NewGame
0x0338     [168]    _ConnectFour_InsertDisc
0x03E0       [9]    _Timer_Miliseconds
0x03E9     [762]    _ConnectFour_CheckWinner
0x06E3      [91]    _Display_Refresh
0x073E     [264]    _main
0x0846      [55]    _Timer_Tick
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    connectfour_mCurrentPlayerColor
0x0009       [1]    connectfour_mDiscYPosition
0x000A       [1]    connectfour_mDiscXPosition
0x000B       [4]    timer_mMiliseconds
0x000F       [1]    main_key_L0
0x0010       [4]    main_startTime_L0
0x0014       [4]    main_stopTime_L0
0x0018       [1]    FARG_ConnectFour_TurnWinnersDiscs_onOff
0x0018       [1]    ConnectFour_NewGame_i_L0
0x0018       [1]    Keypad_Key_Click_rslt_L0
0x0018       [1]    FARG_ConnectFour_InsertDisc_column
0x0018       [1]    ConnectFour_CheckWinner_hits_L0
0x0019       [1]    ConnectFour_InsertDisc_i_L0
0x0019       [1]    ConnectFour_TurnWinnersDiscs_i_L0
0x0019       [1]    ConnectFour_CheckWinner_i_L0
0x0019       [1]    ConnectFour_NewGame_j_L0
0x001A       [1]    ConnectFour_InsertDisc_j_L0
0x001A       [1]    ConnectFour_CheckWinner_j_L0
0x001B       [1]    Graphics_ClearDisplay_i_L0
0x001B       [1]    Keypad_Key_Press_rslt_L0
0x001C       [1]    Keypad_Key_Press_kdata_L0
0x001D       [1]    Keypad_Key_Press_loc_L0
0x001E       [1]    Keypad_Key_Press_rowcnt_L0
0x001F       [1]    Keypad_Key_Press_shifter_L0
0x0020       [1]    FARG_Graphics_HorizontalLine_row
0x0021       [1]    FARG_Graphics_HorizontalLine_columnStart
0x0022       [1]    FARG_Graphics_HorizontalLine_columnEnd
0x0023       [1]    FARG_Graphics_HorizontalLine_color
0x0024       [1]    Graphics_HorizontalLine_column_L0
0x0025       [1]    FARG_Graphics_SetPixel_row
0x0026       [1]    FARG_Graphics_SetPixel_column
0x0027       [1]    FARG_Graphics_SetPixel_color
0x0028       [1]    FARG_Display_SetOutput_row
0x0029       [1]    FARG_Display_SetOutput_red
0x002A       [1]    FARG_Display_SetOutput_green
0x0030       [8]    _gMatrixGreen
0x0038       [1]    Display_Refresh_i_L0
0x0039       [8]    connectfour_mWinnersDiscsPosition
0x0041      [42]    connectfour_mGameMatrix
0x006B       [8]    _gMatrixRed
0x0080       [1]    keypadPort
0x0080       [1]    P0
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [0]    TR1_bit
0x0088       [0]    TR0_bit
0x0089       [1]    TMOD
0x008A       [1]    TL0
0x008B       [1]    TL1
0x008C       [1]    TH0
0x008D       [1]    TH1
0x0090       [1]    display_mRowOutputPort
0x0090       [1]    P1
0x00A0       [1]    display_mRedOutputPort
0x00A0       [1]    P2
0x00A8       [1]    IE
0x00B0       [1]    display_mGreenOutputPort
0x00B0       [1]    P3
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x087D       [8]    ?ICSconnectfour_mWinnersDiscsPosition
0x0885      [42]    ?ICSconnectfour_mGameMatrix
0x08AF       [8]    ?ICS_gMatrixRed
0x08B7      [17]    _keys
0x08C8       [8]    ?ICS_gMatrixGreen
0x08D0       [8]    _gMatrixRow
0x08D8       [1]    ?ICSDisplay_Refresh_i_L0
//** Label List: ** 
//----------------------------------------------
  L_ConnectFour_SwitchPlayer0
  L_ConnectFour_SwitchPlayer1
  L_ConnectFour_SwitchPlayer2
  L_ConnectFour_InsertDisc3
  L_ConnectFour_InsertDisc4
  L_ConnectFour_InsertDisc5
  L_ConnectFour_InsertDisc6
  L_ConnectFour_InsertDisc7
  L_ConnectFour_InsertDisc8
  L_ConnectFour_InsertDisc9
  L_ConnectFour_InsertDisc10
  L_ConnectFour_InsertDisc11
  L_ConnectFour_CheckWinner12
  L_ConnectFour_CheckWinner13
  L_ConnectFour_CheckWinner14
  L_ConnectFour_CheckWinner15
  L_ConnectFour_CheckWinner16
  L_ConnectFour_CheckWinner17
  L_ConnectFour_CheckWinner18
  L_ConnectFour_CheckWinner19
  L_ConnectFour_CheckWinner20
  L_ConnectFour_CheckWinner21
  L_ConnectFour_CheckWinner22
  L_ConnectFour_CheckWinner23
  L_ConnectFour_CheckWinner24
  L_ConnectFour_CheckWinner25
  L_ConnectFour_CheckWinner26
  L_ConnectFour_CheckWinner27
  L_ConnectFour_CheckWinner28
  L_ConnectFour_CheckWinner29
  L_ConnectFour_CheckWinner30
  L_ConnectFour_CheckWinner31
  L_ConnectFour_CheckWinner32
  L_ConnectFour_CheckWinner33
  L_ConnectFour_CheckWinner34
  L_ConnectFour_CheckWinner35
  L_ConnectFour_CheckWinner36
  L_ConnectFour_CheckWinner37
  L_ConnectFour_CheckWinner38
  L_ConnectFour_CheckWinner39
  L_ConnectFour_CheckWinner40
  L_ConnectFour_CheckWinner41
  L_ConnectFour_CheckWinner42
  L_ConnectFour_CheckWinner43
  L_ConnectFour_CheckWinner44
  L_ConnectFour_CheckWinner45
  L_ConnectFour_CheckWinner46
  L_ConnectFour_CheckWinner47
  L_ConnectFour_CheckWinner48
  L_ConnectFour_CheckWinner49
  L_ConnectFour_CheckWinner50
  L_ConnectFour_CheckWinner51
  L_ConnectFour_CheckWinner52
  L_ConnectFour_CheckWinner53
  L_ConnectFour_CheckWinner54
  L_ConnectFour_CheckWinner55
  L_ConnectFour_CheckWinner56
  L_ConnectFour_CheckWinner57
  L_ConnectFour_CheckWinner58
  L_ConnectFour_CheckWinner59
  L_ConnectFour_CheckWinner60
  L_ConnectFour_CheckWinner61
  L_ConnectFour_TurnWinnersDiscs62
  L_ConnectFour_TurnWinnersDiscs63
  L_ConnectFour_TurnWinnersDiscs64
  L_ConnectFour_TurnWinnersDiscs65
  L_ConnectFour_TurnWinnersDiscs66
  L_ConnectFour_TurnWinnersDiscs67
  L_ConnectFour_TurnWinnersDiscs68
  L_ConnectFour_TurnWinnersDiscs69
  L_ConnectFour_NewGame70
  L_ConnectFour_NewGame71
  L_ConnectFour_NewGame72
  L_ConnectFour_NewGame73
  L_ConnectFour_NewGame74
  L_ConnectFour_NewGame75
  L_ConnectFour_NewGame76
  L_ConnectFour_NewGame77
  L_ConnectFour_NewGame78
  L_ConnectFour_NewGame79
  L_ConnectFour_NewGame80
  L_ConnectFour_NewGame81
  L__ConnectFour_CheckWinner82
  L__ConnectFour_CheckWinner83
  L__ConnectFour_CheckWinner84
  L__ConnectFour_CheckWinner85
  _ConnectFour_Init
  _ConnectFour_SwitchPlayer
  _ConnectFour_InsertDisc
  _ConnectFour_CheckWinner
  L__ConnectFour_CheckWinner86
  L__ConnectFour_CheckWinner87
  L__ConnectFour_CheckWinner88
  L__ConnectFour_CheckWinner89
  L__ConnectFour_CheckWinner90
  L__ConnectFour_CheckWinner91
  L__ConnectFour_CheckWinner92
  L__ConnectFour_CheckWinner93
  L__ConnectFour_CheckWinner94
  L__ConnectFour_CheckWinner95
  L__ConnectFour_CheckWinner96
  L__ConnectFour_CheckWinner97
  L__ConnectFour_CheckWinner98
  L__ConnectFour_CheckWinner99
  L__ConnectFour_CheckWinner100
  L__ConnectFour_CheckWinner101
  L__ConnectFour_CheckWinner102
  L__ConnectFour_CheckWinner103
  L__ConnectFour_CheckWinner104
  L__ConnectFour_CheckWinner105
  L__ConnectFour_CheckWinner106
  L__ConnectFour_CheckWinner107
  L__ConnectFour_CheckWinner108
  L__ConnectFour_CheckWinner109
  L__ConnectFour_CheckWinner110
  L__ConnectFour_CheckWinner111
  L__ConnectFour_CheckWinner112
  L__ConnectFour_CheckWinner113
  _ConnectFour_TurnWinnersDiscs
  L__ConnectFour_TurnWinnersDiscs114
  L__ConnectFour_TurnWinnersDiscs115
  L__ConnectFour_TurnWinnersDiscs116
  L__ConnectFour_TurnWinnersDiscs117
  _ConnectFour_NewGame
  L__ConnectFour_NewGame118
  L__ConnectFour_NewGame119
  L_Display_Refresh0
  _Display_Init
  _Display_SetOutput
  _Display_Refresh
  L_Graphics_SetPixel0
  L_Graphics_SetPixel1
  L_Graphics_SetPixel2
  L_Graphics_SetPixel3
  L_Graphics_SetPixel4
  L_Graphics_SetPixel5
  L_Graphics_VerticalLine6
  L_Graphics_VerticalLine7
  L_Graphics_VerticalLine8
  L_Graphics_HorizontalLine9
  L_Graphics_HorizontalLine10
  L_Graphics_HorizontalLine11
  L_Graphics_ClearDisplay12
  L_Graphics_ClearDisplay13
  L_Graphics_ClearDisplay14
  _Graphics_SetPixel
  L__Graphics_SetPixel15
  L__Graphics_SetPixel16
  L__Graphics_SetPixel17
  L__Graphics_SetPixel18
  L__Graphics_SetPixel19
  L__Graphics_SetPixel20
  L__Graphics_SetPixel21
  L__Graphics_SetPixel22
  L__Graphics_SetPixel23
  L__Graphics_SetPixel24
  L__Graphics_SetPixel25
  L__Graphics_SetPixel26
  L__Graphics_SetPixel27
  L__Graphics_SetPixel28
  L__Graphics_SetPixel29
  L__Graphics_SetPixel30
  _Graphics_VerticalLine
  _Graphics_HorizontalLine
  _Graphics_ClearDisplay
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L__main24
  L__main25
  _Init
  _main
  _Timer_Init
  _Timer_Miliseconds
  _Timer_Tick
  L_Delay_Cyc0
  L_Delay_Cyc1
  L_VDelay_ms2
  L_VDelay_ms3
  L_VDelay_ms4
  L_VDelay_ms5
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_10ms
  _Delay_100ms
  _Delay_1sec
  _Delay_Cyc
  _VDelay_ms
  L_Keypad_Key_Press0
  L_Keypad_Key_Press1
  L_Keypad_Key_Press2
  L_Keypad_Key_Press3
  L_Keypad_Key_Press4
  L_Keypad_Key_Click5
  L_Keypad_Key_Click6
  _Keypad_Init
  _Keypad_Key_Press
  L__Keypad_Key_Press7
  L__Keypad_Key_Press8
  L__Keypad_Key_Press9
  L__Keypad_Key_Press10
  _Keypad_Key_Click
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  _Timer_Init
  _Timer_Miliseconds
  _Timer_Tick
  L_Display_Refresh0
  _Display_Init
  _Display_SetOutput
  _Display_Refresh
